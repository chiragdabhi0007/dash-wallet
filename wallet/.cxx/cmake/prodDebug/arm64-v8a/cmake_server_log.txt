CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"supportedProtocolVersions":[{"isExperimental":true,"major":1,"minor":1}],"type":"hello"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {
  "type": "handshake",
  "cookie": "gradle-cmake-cookie",
  "protocolVersion": {
    "isExperimental": true,
    "major": 1,
    "minor": 1
  },
  "sourceDirectory": "/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp",
  "buildDirectory": "/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a",
  "generator": "Ninja"
}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"gradle-cmake-cookie","inReplyTo":"handshake","type":"reply"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {
  "type": "configure",
  "cacheArguments": [
    "",
    "-DCMAKE_C_FLAGS\u003d-DHAVE_CONFIG_H -DWORD\u003d32",
    "-DCMAKE_FIND_ROOT_PATH\u003d/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/prefab/arm64-v8a/prefab",
    "-DCMAKE_BUILD_TYPE\u003dDebug",
    "-DCMAKE_TOOLCHAIN_FILE\u003d/home/tops/Android/Sdk/ndk/21.1.6352462/build/cmake/android.toolchain.cmake",
    "-DANDROID_ABI\u003darm64-v8a",
    "-DANDROID_NDK\u003d/home/tops/Android/Sdk/ndk/21.1.6352462",
    "-DANDROID_PLATFORM\u003dandroid-19",
    "-DCMAKE_ANDROID_ARCH_ABI\u003darm64-v8a",
    "-DCMAKE_ANDROID_NDK\u003d/home/tops/Android/Sdk/ndk/21.1.6352462",
    "-DCMAKE_EXPORT_COMPILE_COMMANDS\u003dON",
    "-DCMAKE_LIBRARY_OUTPUT_DIRECTORY\u003d/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/build/intermediates/cmake/prodDebug/obj/arm64-v8a",
    "-DCMAKE_MAKE_PROGRAM\u003d/home/tops/Android/Sdk/cmake/3.10.2.4988404/bin/ninja",
    "-DCMAKE_SYSTEM_NAME\u003dAndroid",
    "-DCMAKE_SYSTEM_VERSION\u003d19"
  ]
}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Check for working C compiler: /home/tops/Android/Sdk/ndk/21.1.6352462/toolchains/llvm/prebuilt/linux-x86_64/bin/clang","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Check for working C compiler: /home/tops/Android/Sdk/ndk/21.1.6352462/toolchains/llvm/prebuilt/linux-x86_64/bin/clang
CMAKE SERVER: Check for working C compiler: /home/tops/Android/Sdk/ndk/21.1.6352462/toolchains/llvm/prebuilt/linux-x86_64/bin/clang
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","progressCurrent":33,"progressMaximum":1000,"progressMessage":"Configuring","progressMinimum":0,"type":"progress"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Check for working C compiler: /home/tops/Android/Sdk/ndk/21.1.6352462/toolchains/llvm/prebuilt/linux-x86_64/bin/clang -- works","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Check for working C compiler: /home/tops/Android/Sdk/ndk/21.1.6352462/toolchains/llvm/prebuilt/linux-x86_64/bin/clang -- works
CMAKE SERVER: Check for working C compiler: /home/tops/Android/Sdk/ndk/21.1.6352462/toolchains/llvm/prebuilt/linux-x86_64/bin/clang -- works
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Detecting C compiler ABI info","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Detecting C compiler ABI info
CMAKE SERVER: Detecting C compiler ABI info
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","progressCurrent":65,"progressMaximum":1000,"progressMessage":"Configuring","progressMinimum":0,"type":"progress"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Detecting C compiler ABI info - done","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Detecting C compiler ABI info - done
CMAKE SERVER: Detecting C compiler ABI info - done
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Detecting C compile features","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Detecting C compile features
CMAKE SERVER: Detecting C compile features
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","progressCurrent":96,"progressMaximum":1000,"progressMessage":"Configuring","progressMinimum":0,"type":"progress"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","progressCurrent":126,"progressMaximum":1000,"progressMessage":"Configuring","progressMinimum":0,"type":"progress"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","progressCurrent":155,"progressMaximum":1000,"progressMessage":"Configuring","progressMinimum":0,"type":"progress"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Detecting C compile features - done","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Detecting C compile features - done
CMAKE SERVER: Detecting C compile features - done
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Check for working CXX compiler: /home/tops/Android/Sdk/ndk/21.1.6352462/toolchains/llvm/prebuilt/linux-x86_64/bin/clang++","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Check for working CXX compiler: /home/tops/Android/Sdk/ndk/21.1.6352462/toolchains/llvm/prebuilt/linux-x86_64/bin/clang++
CMAKE SERVER: Check for working CXX compiler: /home/tops/Android/Sdk/ndk/21.1.6352462/toolchains/llvm/prebuilt/linux-x86_64/bin/clang++
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","progressCurrent":184,"progressMaximum":1000,"progressMessage":"Configuring","progressMinimum":0,"type":"progress"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Check for working CXX compiler: /home/tops/Android/Sdk/ndk/21.1.6352462/toolchains/llvm/prebuilt/linux-x86_64/bin/clang++ -- works","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Check for working CXX compiler: /home/tops/Android/Sdk/ndk/21.1.6352462/toolchains/llvm/prebuilt/linux-x86_64/bin/clang++ -- works
CMAKE SERVER: Check for working CXX compiler: /home/tops/Android/Sdk/ndk/21.1.6352462/toolchains/llvm/prebuilt/linux-x86_64/bin/clang++ -- works
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Detecting CXX compiler ABI info","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Detecting CXX compiler ABI info
CMAKE SERVER: Detecting CXX compiler ABI info
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","progressCurrent":211,"progressMaximum":1000,"progressMessage":"Configuring","progressMinimum":0,"type":"progress"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Detecting CXX compiler ABI info - done","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Detecting CXX compiler ABI info - done
CMAKE SERVER: Detecting CXX compiler ABI info - done
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Detecting CXX compile features","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Detecting CXX compile features
CMAKE SERVER: Detecting CXX compile features
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","progressCurrent":237,"progressMaximum":1000,"progressMessage":"Configuring","progressMinimum":0,"type":"progress"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","progressCurrent":262,"progressMaximum":1000,"progressMessage":"Configuring","progressMinimum":0,"type":"progress"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","progressCurrent":287,"progressMaximum":1000,"progressMessage":"Configuring","progressMinimum":0,"type":"progress"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","progressCurrent":311,"progressMaximum":1000,"progressMessage":"Configuring","progressMinimum":0,"type":"progress"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Detecting CXX compile features - done","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Detecting CXX compile features - done
CMAKE SERVER: Detecting CXX compile features - done
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","progressCurrent":334,"progressMaximum":1000,"progressMessage":"Configuring","progressMinimum":0,"type":"progress"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"binary dir = /home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: binary dir = /home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a
CMAKE SERVER: binary dir = /home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","progressCurrent":356,"progressMaximum":1000,"progressMessage":"Configuring","progressMinimum":0,"type":"progress"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"\n-- Configuring RELIC 0.4.1...\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: 
-- Configuring RELIC 0.4.1...
CMAKE SERVER: 
-- Configuring RELIC 0.4.1...
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Available switches (default = CHECK, VERBS, DOCUM):\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Available switches (default = CHECK, VERBS, DOCUM):
CMAKE SERVER: Available switches (default = CHECK, VERBS, DOCUM):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   DEBUG=[off|on] Build with debugging support.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    DEBUG=[off|on] Build with debugging support.
CMAKE SERVER:    DEBUG=[off|on] Build with debugging support.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   PROFL=[off|on] Build with profiling support.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    PROFL=[off|on] Build with profiling support.
CMAKE SERVER:    PROFL=[off|on] Build with profiling support.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   CHECK=[off|on] Build with error-checking support.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    CHECK=[off|on] Build with error-checking support.
CMAKE SERVER:    CHECK=[off|on] Build with error-checking support.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   VERBS=[off|on] Build with detailed error messages.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    VERBS=[off|on] Build with detailed error messages.
CMAKE SERVER:    VERBS=[off|on] Build with detailed error messages.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   TRACE=[off|on] Build with tracing support.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    TRACE=[off|on] Build with tracing support.
CMAKE SERVER:    TRACE=[off|on] Build with tracing support.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   OVERH=[off|on] Build with overhead estimation.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    OVERH=[off|on] Build with overhead estimation.
CMAKE SERVER:    OVERH=[off|on] Build with overhead estimation.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   DOCUM=[off|on] Build documentation.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    DOCUM=[off|on] Build documentation.
CMAKE SERVER:    DOCUM=[off|on] Build documentation.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   STRIP=[off|on] Build only selected algorithms.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    STRIP=[off|on] Build only selected algorithms.
CMAKE SERVER:    STRIP=[off|on] Build only selected algorithms.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   QUIET=[off|on] Build with printing disabled.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    QUIET=[off|on] Build with printing disabled.
CMAKE SERVER:    QUIET=[off|on] Build with printing disabled.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   COLOR=[off|on] Build with colored output.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    COLOR=[off|on] Build with colored output.
CMAKE SERVER:    COLOR=[off|on] Build with colored output.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   BIGED=[off|on] Build with big-endian support.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    BIGED=[off|on] Build with big-endian support.
CMAKE SERVER:    BIGED=[off|on] Build with big-endian support.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   SHLIB=[off|on] Build shared library.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    SHLIB=[off|on] Build shared library.
CMAKE SERVER:    SHLIB=[off|on] Build shared library.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   STLIB=[off|on] Build static library.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    STLIB=[off|on] Build static library.
CMAKE SERVER:    STLIB=[off|on] Build static library.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   STBIN=[off|on] Build static binaries.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    STBIN=[off|on] Build static binaries.
CMAKE SERVER:    STBIN=[off|on] Build static binaries.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   AMALG=[off|on] Build amalgamation for better performance.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    AMALG=[off|on] Build amalgamation for better performance.
CMAKE SERVER:    AMALG=[off|on] Build amalgamation for better performance.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Number of times each test or benchmark is ran (default = 50, 1000):\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Number of times each test or benchmark is ran (default = 50, 1000):
CMAKE SERVER: Number of times each test or benchmark is ran (default = 50, 1000):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   TESTS=n        If n > 0, build automated tests and run them n times.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    TESTS=n        If n > 0, build automated tests and run them n times.
CMAKE SERVER:    TESTS=n        If n > 0, build automated tests and run them n times.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   BENCH=n        If n > 0, build automated benchmarks and run them n * n times.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    BENCH=n        If n > 0, build automated benchmarks and run them n * n times.
CMAKE SERVER:    BENCH=n        If n > 0, build automated benchmarks and run them n * n times.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Number of available processor cores (default = 1):\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Number of available processor cores (default = 1):
CMAKE SERVER: Number of available processor cores (default = 1):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   CORES=n        If n > 1, please enable multithreading support.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    CORES=n        If n > 1, please enable multithreading support.
CMAKE SERVER:    CORES=n        If n > 1, please enable multithreading support.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Available modules (default = ALL)\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Available modules (default = ALL)
CMAKE SERVER: Available modules (default = ALL)
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   WITH=BN       Multiple precision arithmetic.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    WITH=BN       Multiple precision arithmetic.
CMAKE SERVER:    WITH=BN       Multiple precision arithmetic.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   WITH=DV       Temporary double-precision digit vectors.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    WITH=DV       Temporary double-precision digit vectors.
CMAKE SERVER:    WITH=DV       Temporary double-precision digit vectors.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   WITH=FP       Prime field arithmetic.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    WITH=FP       Prime field arithmetic.
CMAKE SERVER:    WITH=FP       Prime field arithmetic.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   WITH=FPX      Prime extension field arithmetic.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    WITH=FPX      Prime extension field arithmetic.
CMAKE SERVER:    WITH=FPX      Prime extension field arithmetic.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   WITH=FB       Binary field arithmetic.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    WITH=FB       Binary field arithmetic.
CMAKE SERVER:    WITH=FB       Binary field arithmetic.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   WITH=EP       Elliptic curves over prime fields.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    WITH=EP       Elliptic curves over prime fields.
CMAKE SERVER:    WITH=EP       Elliptic curves over prime fields.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   WITH=EPX      Elliptic curves over quadratic extensions of prime fields.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    WITH=EPX      Elliptic curves over quadratic extensions of prime fields.
CMAKE SERVER:    WITH=EPX      Elliptic curves over quadratic extensions of prime fields.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   WITH=EB       Elliptic curves over binary fields.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    WITH=EB       Elliptic curves over binary fields.
CMAKE SERVER:    WITH=EB       Elliptic curves over binary fields.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   WITH=ED       Elliptic Edwards curves over prime fields.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    WITH=ED       Elliptic Edwards curves over prime fields.
CMAKE SERVER:    WITH=ED       Elliptic Edwards curves over prime fields.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   WTTH=EC       Elliptic curve cryptography.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    WTTH=EC       Elliptic curve cryptography.
CMAKE SERVER:    WTTH=EC       Elliptic curve cryptography.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   WITH=PB       Pairings over binary elliptic curves.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    WITH=PB       Pairings over binary elliptic curves.
CMAKE SERVER:    WITH=PB       Pairings over binary elliptic curves.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   WITH=PP       Pairings over prime elliptic curves.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    WITH=PP       Pairings over prime elliptic curves.
CMAKE SERVER:    WITH=PP       Pairings over prime elliptic curves.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   WTTH=PC       Pairing-based cryptography.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    WTTH=PC       Pairing-based cryptography.
CMAKE SERVER:    WTTH=PC       Pairing-based cryptography.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   WITH=BC       Block ciphers (symmetric encryption).","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    WITH=BC       Block ciphers (symmetric encryption).
CMAKE SERVER:    WITH=BC       Block ciphers (symmetric encryption).
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   WITH=MD       Message digests (hash functions).","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    WITH=MD       Message digests (hash functions).
CMAKE SERVER:    WITH=MD       Message digests (hash functions).
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   WITH=CP       Cryptographic protocols.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    WITH=CP       Cryptographic protocols.
CMAKE SERVER:    WITH=CP       Cryptographic protocols.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   WITH=ALL      All of the above.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    WITH=ALL      All of the above.
CMAKE SERVER:    WITH=ALL      All of the above.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   Note: the programmer is responsible for not using unselected modules.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    Note: the programmer is responsible for not using unselected modules.
CMAKE SERVER:    Note: the programmer is responsible for not using unselected modules.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Available arithmetic backends (default = easy):\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Available arithmetic backends (default = easy):
CMAKE SERVER: Available arithmetic backends (default = easy):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   ARITH=easy     Easy-to-understand implementation.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    ARITH=easy     Easy-to-understand implementation.
CMAKE SERVER:    ARITH=easy     Easy-to-understand implementation.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   ARITH=gmp      GNU Multiple Precision library.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    ARITH=gmp      GNU Multiple Precision library.
CMAKE SERVER:    ARITH=gmp      GNU Multiple Precision library.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Available memory-allocation policies (default = AUTO):\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Available memory-allocation policies (default = AUTO):
CMAKE SERVER: Available memory-allocation policies (default = AUTO):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   ALLOC=AUTO     All memory is automatically allocated.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    ALLOC=AUTO     All memory is automatically allocated.
CMAKE SERVER:    ALLOC=AUTO     All memory is automatically allocated.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   ALLOC=STATIC   All memory is allocated statically once.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    ALLOC=STATIC   All memory is allocated statically once.
CMAKE SERVER:    ALLOC=STATIC   All memory is allocated statically once.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   ALLOC=DYNAMIC  All memory is allocated dynamically on demand.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    ALLOC=DYNAMIC  All memory is allocated dynamically on demand.
CMAKE SERVER:    ALLOC=DYNAMIC  All memory is allocated dynamically on demand.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   ALLOC=STACK    All memory is allocated from the stack.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    ALLOC=STACK    All memory is allocated from the stack.
CMAKE SERVER:    ALLOC=STACK    All memory is allocated from the stack.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Supported operating systems (default = LINUX):\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Supported operating systems (default = LINUX):
CMAKE SERVER: Supported operating systems (default = LINUX):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   OPSYS=         Undefined/No specific operating system.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    OPSYS=         Undefined/No specific operating system.
CMAKE SERVER:    OPSYS=         Undefined/No specific operating system.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   OPSYS=LINUX    GNU/Linux operating system.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    OPSYS=LINUX    GNU/Linux operating system.
CMAKE SERVER:    OPSYS=LINUX    GNU/Linux operating system.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   OPSYS=FREEBSD  FreeBSD operating system.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    OPSYS=FREEBSD  FreeBSD operating system.
CMAKE SERVER:    OPSYS=FREEBSD  FreeBSD operating system.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   OPSYS=MACOSX   Mac OS X operating system.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    OPSYS=MACOSX   Mac OS X operating system.
CMAKE SERVER:    OPSYS=MACOSX   Mac OS X operating system.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   OPSYS=WINDOWS  Windows operating system.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    OPSYS=WINDOWS  Windows operating system.
CMAKE SERVER:    OPSYS=WINDOWS  Windows operating system.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   OPSYS=DROID    Android operating system.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    OPSYS=DROID    Android operating system.
CMAKE SERVER:    OPSYS=DROID    Android operating system.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   OPSYS=DUINO    Arduino platform.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    OPSYS=DUINO    Arduino platform.
CMAKE SERVER:    OPSYS=DUINO    Arduino platform.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Supported multithreading APIs (default = UNDEF):\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Supported multithreading APIs (default = UNDEF):
CMAKE SERVER: Supported multithreading APIs (default = UNDEF):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   MULTI=         No multithreading support.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    MULTI=         No multithreading support.
CMAKE SERVER:    MULTI=         No multithreading support.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   MULTI=OPENMP   Open Multi-Processing.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    MULTI=OPENMP   Open Multi-Processing.
CMAKE SERVER:    MULTI=OPENMP   Open Multi-Processing.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   MULTI=PTHREAD  POSIX threads.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    MULTI=PTHREAD  POSIX threads.
CMAKE SERVER:    MULTI=PTHREAD  POSIX threads.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Supported timers (default = HPROC):\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Supported timers (default = HPROC):
CMAKE SERVER: Supported timers (default = HPROC):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   TIMER=         No timer.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    TIMER=         No timer.
CMAKE SERVER:    TIMER=         No timer.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   TIMER=HREAL    GNU/Linux realtime high-resolution timer.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    TIMER=HREAL    GNU/Linux realtime high-resolution timer.
CMAKE SERVER:    TIMER=HREAL    GNU/Linux realtime high-resolution timer.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   TIMER=HPROC    GNU/Linux per-process high-resolution timer.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    TIMER=HPROC    GNU/Linux per-process high-resolution timer.
CMAKE SERVER:    TIMER=HPROC    GNU/Linux per-process high-resolution timer.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   TIMER=HTHRD    GNU/Linux per-thread high-resolution timer.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    TIMER=HTHRD    GNU/Linux per-thread high-resolution timer.
CMAKE SERVER:    TIMER=HTHRD    GNU/Linux per-thread high-resolution timer.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   TIMER=ANSI     ANSI-compatible timer.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    TIMER=ANSI     ANSI-compatible timer.
CMAKE SERVER:    TIMER=ANSI     ANSI-compatible timer.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   TIMER=POSIX    POSIX-compatible timer.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    TIMER=POSIX    POSIX-compatible timer.
CMAKE SERVER:    TIMER=POSIX    POSIX-compatible timer.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   TIMER=CYCLE    Cycle-counting timer. (architecture-dependant)\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    TIMER=CYCLE    Cycle-counting timer. (architecture-dependant)
CMAKE SERVER:    TIMER=CYCLE    Cycle-counting timer. (architecture-dependant)
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Prefix to identify this build of the library (default = \"\"):\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Prefix to identify this build of the library (default = ""):
CMAKE SERVER: Prefix to identify this build of the library (default = ""):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   LABEL=relic\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    LABEL=relic
CMAKE SERVER:    LABEL=relic
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Available architectures (default = X64):\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Available architectures (default = X64):
CMAKE SERVER: Available architectures (default = X64):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   ARCH=          No specific architecture (disable some features).","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    ARCH=          No specific architecture (disable some features).
CMAKE SERVER:    ARCH=          No specific architecture (disable some features).
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   ARCH=AVR       Atmel AVR ATMega128 8-bit architecture.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    ARCH=AVR       Atmel AVR ATMega128 8-bit architecture.
CMAKE SERVER:    ARCH=AVR       Atmel AVR ATMega128 8-bit architecture.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   ARCH=MSP       TI MSP430 16-bit architecture.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    ARCH=MSP       TI MSP430 16-bit architecture.
CMAKE SERVER:    ARCH=MSP       TI MSP430 16-bit architecture.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   ARCH=ARM       ARM 32-bit architecture.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    ARCH=ARM       ARM 32-bit architecture.
CMAKE SERVER:    ARCH=ARM       ARM 32-bit architecture.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   ARCH=X86       Intel x86-compatible 32-bit architecture.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    ARCH=X86       Intel x86-compatible 32-bit architecture.
CMAKE SERVER:    ARCH=X86       Intel x86-compatible 32-bit architecture.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   ARCH=X64       AMD x86_64-compatible 64-bit architecture.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    ARCH=X64       AMD x86_64-compatible 64-bit architecture.
CMAKE SERVER:    ARCH=X64       AMD x86_64-compatible 64-bit architecture.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Available word sizes (default = 64):\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Available word sizes (default = 64):
CMAKE SERVER: Available word sizes (default = 64):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   WSIZE=8        Build a 8-bit library.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    WSIZE=8        Build a 8-bit library.
CMAKE SERVER:    WSIZE=8        Build a 8-bit library.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   WSIZE=16       Build a 16-bit library.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    WSIZE=16       Build a 16-bit library.
CMAKE SERVER:    WSIZE=16       Build a 16-bit library.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   WSIZE=32       Build a 32-bit library.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    WSIZE=32       Build a 32-bit library.
CMAKE SERVER:    WSIZE=32       Build a 32-bit library.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   WSIZE=64       Build a 64-bit library.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    WSIZE=64       Build a 64-bit library.
CMAKE SERVER:    WSIZE=64       Build a 64-bit library.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Byte boundary to align digit vectors (default = 1):\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Byte boundary to align digit vectors (default = 1):
CMAKE SERVER: Byte boundary to align digit vectors (default = 1):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   ALIGN=1        Do not align digit vectors.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    ALIGN=1        Do not align digit vectors.
CMAKE SERVER:    ALIGN=1        Do not align digit vectors.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   ALIGN=2        Align digit vectors into 16-bit boundaries.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    ALIGN=2        Align digit vectors into 16-bit boundaries.
CMAKE SERVER:    ALIGN=2        Align digit vectors into 16-bit boundaries.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   ALIGN=8        Align digit vectors into 64-bit boundaries.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    ALIGN=8        Align digit vectors into 64-bit boundaries.
CMAKE SERVER:    ALIGN=8        Align digit vectors into 64-bit boundaries.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   ALIGN=16       Align digit vectors into 128-bit boundaries.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    ALIGN=16       Align digit vectors into 128-bit boundaries.
CMAKE SERVER:    ALIGN=16       Align digit vectors into 128-bit boundaries.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Multiple precision arithmetic configuration (BN module):\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Multiple precision arithmetic configuration (BN module):
CMAKE SERVER: Multiple precision arithmetic configuration (BN module):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   ** Options for the multiple precision module (default = 1024,DOUBLE,0):\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    ** Options for the multiple precision module (default = 1024,DOUBLE,0):
CMAKE SERVER:    ** Options for the multiple precision module (default = 1024,DOUBLE,0):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      BN_PRECI=n        The base precision in bits. Let w be n in words.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       BN_PRECI=n        The base precision in bits. Let w be n in words.
CMAKE SERVER:       BN_PRECI=n        The base precision in bits. Let w be n in words.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      BN_MAGNI=DOUBLE   A multiple precision integer can store 2w words.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       BN_MAGNI=DOUBLE   A multiple precision integer can store 2w words.
CMAKE SERVER:       BN_MAGNI=DOUBLE   A multiple precision integer can store 2w words.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      BN_MAGNI=CARRY    A multiple precision integer can store w+1 words.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       BN_MAGNI=CARRY    A multiple precision integer can store w+1 words.
CMAKE SERVER:       BN_MAGNI=CARRY    A multiple precision integer can store w+1 words.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      BN_MAGNI=SINGLE   A multiple precision integer can store w words.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       BN_MAGNI=SINGLE   A multiple precision integer can store w words.
CMAKE SERVER:       BN_MAGNI=SINGLE   A multiple precision integer can store w words.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      BN_KARAT=n        The number of Karatsuba steps.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       BN_KARAT=n        The number of Karatsuba steps.
CMAKE SERVER:       BN_KARAT=n        The number of Karatsuba steps.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   ** Available multiple precision arithmetic methods (default = COMBA;COMBA;MONTY;SLIDE;STEIN;BASIC):\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    ** Available multiple precision arithmetic methods (default = COMBA;COMBA;MONTY;SLIDE;STEIN;BASIC):
CMAKE SERVER:    ** Available multiple precision arithmetic methods (default = COMBA;COMBA;MONTY;SLIDE;STEIN;BASIC):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      Integer multiplication:","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       Integer multiplication:
CMAKE SERVER:       Integer multiplication:
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      BN_METHD=BASIC    Schoolbook multiplication.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       BN_METHD=BASIC    Schoolbook multiplication.
CMAKE SERVER:       BN_METHD=BASIC    Schoolbook multiplication.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      BN_METHD=COMBA    Comba multiplication.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       BN_METHD=COMBA    Comba multiplication.
CMAKE SERVER:       BN_METHD=COMBA    Comba multiplication.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      Integer squaring:","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       Integer squaring:
CMAKE SERVER:       Integer squaring:
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      BN_METHD=BASIC    Schoolbook squaring.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       BN_METHD=BASIC    Schoolbook squaring.
CMAKE SERVER:       BN_METHD=BASIC    Schoolbook squaring.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      BN_METHD=COMBA    Comba squaring.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       BN_METHD=COMBA    Comba squaring.
CMAKE SERVER:       BN_METHD=COMBA    Comba squaring.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      BN_METHD=MULTP    Reuse multiplication for squaring.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       BN_METHD=MULTP    Reuse multiplication for squaring.
CMAKE SERVER:       BN_METHD=MULTP    Reuse multiplication for squaring.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      Modular reduction:","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       Modular reduction:
CMAKE SERVER:       Modular reduction:
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      BN_METHD=BASIC    Division-based modular reduction.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       BN_METHD=BASIC    Division-based modular reduction.
CMAKE SERVER:       BN_METHD=BASIC    Division-based modular reduction.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      BN_METHD=BARRT    Barrett modular reduction.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       BN_METHD=BARRT    Barrett modular reduction.
CMAKE SERVER:       BN_METHD=BARRT    Barrett modular reduction.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      BN_METHD=MONTY    Montgomery modular reduction.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       BN_METHD=MONTY    Montgomery modular reduction.
CMAKE SERVER:       BN_METHD=MONTY    Montgomery modular reduction.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      BN_METHD=RADIX    Diminished radix modular reduction.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       BN_METHD=RADIX    Diminished radix modular reduction.
CMAKE SERVER:       BN_METHD=RADIX    Diminished radix modular reduction.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      Modular exponentiation:","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       Modular exponentiation:
CMAKE SERVER:       Modular exponentiation:
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      BN_METHD=BASIC    Binary modular exponentiation.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       BN_METHD=BASIC    Binary modular exponentiation.
CMAKE SERVER:       BN_METHD=BASIC    Binary modular exponentiation.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      BN_METHD=MONTY    Montgomery powering ladder.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       BN_METHD=MONTY    Montgomery powering ladder.
CMAKE SERVER:       BN_METHD=MONTY    Montgomery powering ladder.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      BN_METHD=SLIDE    Sliding window modular exponentiation.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       BN_METHD=SLIDE    Sliding window modular exponentiation.
CMAKE SERVER:       BN_METHD=SLIDE    Sliding window modular exponentiation.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      Greatest Common Divisor:","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       Greatest Common Divisor:
CMAKE SERVER:       Greatest Common Divisor:
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      BN_METHD=BASIC    Euclid's standard GCD algorithm.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       BN_METHD=BASIC    Euclid's standard GCD algorithm.
CMAKE SERVER:       BN_METHD=BASIC    Euclid's standard GCD algorithm.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      BN_METHD=LEHME    Lehmer's fast GCD algorithm.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       BN_METHD=LEHME    Lehmer's fast GCD algorithm.
CMAKE SERVER:       BN_METHD=LEHME    Lehmer's fast GCD algorithm.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      BN_METHD=STEIN    Stein's binary GCD algorithm.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       BN_METHD=STEIN    Stein's binary GCD algorithm.
CMAKE SERVER:       BN_METHD=STEIN    Stein's binary GCD algorithm.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      Prime generation:","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       Prime generation:
CMAKE SERVER:       Prime generation:
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      BN_METHD=BASIC    Basic prime generation.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       BN_METHD=BASIC    Basic prime generation.
CMAKE SERVER:       BN_METHD=BASIC    Basic prime generation.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      BN_METHD=SAFEP    Safe prime generation.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       BN_METHD=SAFEP    Safe prime generation.
CMAKE SERVER:       BN_METHD=SAFEP    Safe prime generation.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      BN_METHD=STRON    Strong prime generation.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       BN_METHD=STRON    Strong prime generation.
CMAKE SERVER:       BN_METHD=STRON    Strong prime generation.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Prime field arithmetic configuration (FP module):\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Prime field arithmetic configuration (FP module):
CMAKE SERVER: Prime field arithmetic configuration (FP module):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   ** Arithmetic precision of the prime field module (default = 256,0,off,off):\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    ** Arithmetic precision of the prime field module (default = 256,0,off,off):
CMAKE SERVER:    ** Arithmetic precision of the prime field module (default = 256,0,off,off):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FP_PRIME=n        The prime modulus size in bits.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FP_PRIME=n        The prime modulus size in bits.
CMAKE SERVER:       FP_PRIME=n        The prime modulus size in bits.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FP_KARAT=n        The number of Karatsuba levels.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FP_KARAT=n        The number of Karatsuba levels.
CMAKE SERVER:       FP_KARAT=n        The number of Karatsuba levels.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FP_PMERS=[off|on] Prefer Pseudo-Mersenne primes over random primes.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FP_PMERS=[off|on] Prefer Pseudo-Mersenne primes over random primes.
CMAKE SERVER:       FP_PMERS=[off|on] Prefer Pseudo-Mersenne primes over random primes.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FP_QNRES=[off|on] Use -1 as quadratic non-residue (make sure that p = 3 mod 8).","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FP_QNRES=[off|on] Use -1 as quadratic non-residue (make sure that p = 3 mod 8).
CMAKE SERVER:       FP_QNRES=[off|on] Use -1 as quadratic non-residue (make sure that p = 3 mod 8).
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FP_WIDTH=w        Width w in [2,6] of window processing for exponentiation methods.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FP_WIDTH=w        Width w in [2,6] of window processing for exponentiation methods.
CMAKE SERVER:       FP_WIDTH=w        Width w in [2,6] of window processing for exponentiation methods.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   ** Available prime field arithmetic methods (default = BASIC;COMBA;COMBA;MONTY;MONTY;SLIDE):","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    ** Available prime field arithmetic methods (default = BASIC;COMBA;COMBA;MONTY;MONTY;SLIDE):
CMAKE SERVER:    ** Available prime field arithmetic methods (default = BASIC;COMBA;COMBA;MONTY;MONTY;SLIDE):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      Field addition","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       Field addition
CMAKE SERVER:       Field addition
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FP_METHD=BASIC    Schoolbook addition.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FP_METHD=BASIC    Schoolbook addition.
CMAKE SERVER:       FP_METHD=BASIC    Schoolbook addition.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FP_METHD=INTEG    Integrated modular addition.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FP_METHD=INTEG    Integrated modular addition.
CMAKE SERVER:       FP_METHD=INTEG    Integrated modular addition.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      Field multiplication","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       Field multiplication
CMAKE SERVER:       Field multiplication
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FP_METHD=BASIC    Schoolbook multiplication.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FP_METHD=BASIC    Schoolbook multiplication.
CMAKE SERVER:       FP_METHD=BASIC    Schoolbook multiplication.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FP_METHD=INTEG    Integrated modular multiplication.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FP_METHD=INTEG    Integrated modular multiplication.
CMAKE SERVER:       FP_METHD=INTEG    Integrated modular multiplication.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FP_METHD=COMBA    Comba multiplication.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FP_METHD=COMBA    Comba multiplication.
CMAKE SERVER:       FP_METHD=COMBA    Comba multiplication.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      Field squaring","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       Field squaring
CMAKE SERVER:       Field squaring
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FP_METHD=BASIC    Schoolbook squaring.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FP_METHD=BASIC    Schoolbook squaring.
CMAKE SERVER:       FP_METHD=BASIC    Schoolbook squaring.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FP_METHD=INTEG    Integrated modular squaring.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FP_METHD=INTEG    Integrated modular squaring.
CMAKE SERVER:       FP_METHD=INTEG    Integrated modular squaring.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FP_METHD=COMBA    Comba squaring.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FP_METHD=COMBA    Comba squaring.
CMAKE SERVER:       FP_METHD=COMBA    Comba squaring.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FP_METHD=MULTP    Reuse multiplication for squaring.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FP_METHD=MULTP    Reuse multiplication for squaring.
CMAKE SERVER:       FP_METHD=MULTP    Reuse multiplication for squaring.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      Modular reduction","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       Modular reduction
CMAKE SERVER:       Modular reduction
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FP_METHD=BASIC    Division-based reduction.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FP_METHD=BASIC    Division-based reduction.
CMAKE SERVER:       FP_METHD=BASIC    Division-based reduction.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FP_METHD=QUICK    Fast reduction modulo special form prime (2^t - c, c > 0).","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FP_METHD=QUICK    Fast reduction modulo special form prime (2^t - c, c > 0).
CMAKE SERVER:       FP_METHD=QUICK    Fast reduction modulo special form prime (2^t - c, c > 0).
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FP_METHD=MONTY    Montgomery modular reduction.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FP_METHD=MONTY    Montgomery modular reduction.
CMAKE SERVER:       FP_METHD=MONTY    Montgomery modular reduction.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      Field inversion","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       Field inversion
CMAKE SERVER:       Field inversion
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FP_METHD=BASIC    Inversion by Fermat's Little Theorem.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FP_METHD=BASIC    Inversion by Fermat's Little Theorem.
CMAKE SERVER:       FP_METHD=BASIC    Inversion by Fermat's Little Theorem.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FP_METHD=BINAR    Binary Inversion algorithm.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FP_METHD=BINAR    Binary Inversion algorithm.
CMAKE SERVER:       FP_METHD=BINAR    Binary Inversion algorithm.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FP_METHD=MONTY    Montgomery inversion.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FP_METHD=MONTY    Montgomery inversion.
CMAKE SERVER:       FP_METHD=MONTY    Montgomery inversion.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FP_METHD=EXGCD    Inversion by the Extended Euclidean algorithm.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FP_METHD=EXGCD    Inversion by the Extended Euclidean algorithm.
CMAKE SERVER:       FP_METHD=EXGCD    Inversion by the Extended Euclidean algorithm.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FP_METHD=LOWER    Pass inversion to the lower level.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FP_METHD=LOWER    Pass inversion to the lower level.
CMAKE SERVER:       FP_METHD=LOWER    Pass inversion to the lower level.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      Field exponentiation","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       Field exponentiation
CMAKE SERVER:       Field exponentiation
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FP_METHD=BASIC    Binary exponentiation.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FP_METHD=BASIC    Binary exponentiation.
CMAKE SERVER:       FP_METHD=BASIC    Binary exponentiation.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FP_METHD=SLIDE    Sliding window exponentiation.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FP_METHD=SLIDE    Sliding window exponentiation.
CMAKE SERVER:       FP_METHD=SLIDE    Sliding window exponentiation.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FP_METHD=MONTY    Constant-time Montgomery powering ladder.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FP_METHD=MONTY    Constant-time Montgomery powering ladder.
CMAKE SERVER:       FP_METHD=MONTY    Constant-time Montgomery powering ladder.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Prime extension field arithmetic configuration (FPX module):\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Prime extension field arithmetic configuration (FPX module):
CMAKE SERVER: Prime extension field arithmetic configuration (FPX module):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   ** Available bilinear pairing methods (default = BASIC;BASIC;BASIC):","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    ** Available bilinear pairing methods (default = BASIC;BASIC;BASIC):
CMAKE SERVER:    ** Available bilinear pairing methods (default = BASIC;BASIC;BASIC):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      Quadratic extension arithmetic:","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       Quadratic extension arithmetic:
CMAKE SERVER:       Quadratic extension arithmetic:
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FPX_METHD=BASIC    Basic quadratic extension field arithmetic.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FPX_METHD=BASIC    Basic quadratic extension field arithmetic.
CMAKE SERVER:       FPX_METHD=BASIC    Basic quadratic extension field arithmetic.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FPX_METHD=INTEG    Quadratic extension field arithmetic with embedded modular reduction.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FPX_METHD=INTEG    Quadratic extension field arithmetic with embedded modular reduction.
CMAKE SERVER:       FPX_METHD=INTEG    Quadratic extension field arithmetic with embedded modular reduction.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      Cubic extension arithmetic:","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       Cubic extension arithmetic:
CMAKE SERVER:       Cubic extension arithmetic:
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FPX_METHD=BASIC    Basic cubic extension field arithmetic.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FPX_METHD=BASIC    Basic cubic extension field arithmetic.
CMAKE SERVER:       FPX_METHD=BASIC    Basic cubic extension field arithmetic.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FPX_METHD=INTEG    Cubic extension field arithmetic with embedded modular reduction.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FPX_METHD=INTEG    Cubic extension field arithmetic with embedded modular reduction.
CMAKE SERVER:       FPX_METHD=INTEG    Cubic extension field arithmetic with embedded modular reduction.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      Extension field arithmetic:","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       Extension field arithmetic:
CMAKE SERVER:       Extension field arithmetic:
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FPX_METHD=BASIC    Basic extension field arithmetic.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FPX_METHD=BASIC    Basic extension field arithmetic.
CMAKE SERVER:       FPX_METHD=BASIC    Basic extension field arithmetic.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FPX_METHD=LAZYR    Lazy-reduced extension field arithmetic.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FPX_METHD=LAZYR    Lazy-reduced extension field arithmetic.
CMAKE SERVER:       FPX_METHD=LAZYR    Lazy-reduced extension field arithmetic.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Binary field arithmetic configuration (FB module):\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Binary field arithmetic configuration (FB module):
CMAKE SERVER: Binary field arithmetic configuration (FB module):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   ** Options for the binary elliptic curve module (default = 283,0,on,on,on):\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    ** Options for the binary elliptic curve module (default = 283,0,on,on,on):
CMAKE SERVER:    ** Options for the binary elliptic curve module (default = 283,0,on,on,on):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FB_POLYN=n        The irreducible polynomial size in bits.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FB_POLYN=n        The irreducible polynomial size in bits.
CMAKE SERVER:       FB_POLYN=n        The irreducible polynomial size in bits.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FB_KARAT=n        The number of Karatsuba levels.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FB_KARAT=n        The number of Karatsuba levels.
CMAKE SERVER:       FB_KARAT=n        The number of Karatsuba levels.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FB_TRINO=[off|on] Prefer trinomials.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FB_TRINO=[off|on] Prefer trinomials.
CMAKE SERVER:       FB_TRINO=[off|on] Prefer trinomials.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FB_SQRTF=[off|on] Prefer square-root friendly polynomials.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FB_SQRTF=[off|on] Prefer square-root friendly polynomials.
CMAKE SERVER:       FB_SQRTF=[off|on] Prefer square-root friendly polynomials.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FB_PRECO=[off|on] Precompute multiplication table for sqrt(z).","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FB_PRECO=[off|on] Precompute multiplication table for sqrt(z).
CMAKE SERVER:       FB_PRECO=[off|on] Precompute multiplication table for sqrt(z).
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FB_WIDTH=w        Width w in [2,6] of window processing for exponentiation methods.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FB_WIDTH=w        Width w in [2,6] of window processing for exponentiation methods.
CMAKE SERVER:       FB_WIDTH=w        Width w in [2,6] of window processing for exponentiation methods.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   ** Available binary field arithmetic methods (default = LODAH;LUTBL;QUICK;BASIC;QUICK;QUICK;EXGCD;SLIDE;QUICK):\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    ** Available binary field arithmetic methods (default = LODAH;LUTBL;QUICK;BASIC;QUICK;QUICK;EXGCD;SLIDE;QUICK):
CMAKE SERVER:    ** Available binary field arithmetic methods (default = LODAH;LUTBL;QUICK;BASIC;QUICK;QUICK;EXGCD;SLIDE;QUICK):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      Field multiplication:","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       Field multiplication:
CMAKE SERVER:       Field multiplication:
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FB_METHD=BASIC    Right-to-left shift-and-add multiplication.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FB_METHD=BASIC    Right-to-left shift-and-add multiplication.
CMAKE SERVER:       FB_METHD=BASIC    Right-to-left shift-and-add multiplication.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FB_METHD=INTEG    Integrated modular multiplication.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FB_METHD=INTEG    Integrated modular multiplication.
CMAKE SERVER:       FB_METHD=INTEG    Integrated modular multiplication.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FB_METHD=RCOMB    Right-to-left comb multiplication.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FB_METHD=RCOMB    Right-to-left comb multiplication.
CMAKE SERVER:       FB_METHD=RCOMB    Right-to-left comb multiplication.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FB_METHD=LCOMB    Left-to-right comb multiplication.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FB_METHD=LCOMB    Left-to-right comb multiplication.
CMAKE SERVER:       FB_METHD=LCOMB    Left-to-right comb multiplication.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FB_METHD=LODAH    L�pez-Dahab comb multiplication with window of width 4.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FB_METHD=LODAH    L�pez-Dahab comb multiplication with window of width 4.
CMAKE SERVER:       FB_METHD=LODAH    L�pez-Dahab comb multiplication with window of width 4.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      Field squaring:","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       Field squaring:
CMAKE SERVER:       Field squaring:
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FB_METHD=BASIC    Bit manipulation squaring.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FB_METHD=BASIC    Bit manipulation squaring.
CMAKE SERVER:       FB_METHD=BASIC    Bit manipulation squaring.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FB_METHD=INTEG    Integrated modular squaring.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FB_METHD=INTEG    Integrated modular squaring.
CMAKE SERVER:       FB_METHD=INTEG    Integrated modular squaring.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FB_METHD=LUTBL    Table-based squaring.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FB_METHD=LUTBL    Table-based squaring.
CMAKE SERVER:       FB_METHD=LUTBL    Table-based squaring.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      Modular reduction:","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       Modular reduction:
CMAKE SERVER:       Modular reduction:
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FB_METHD=BASIC    Shift-and-add modular reduction.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FB_METHD=BASIC    Shift-and-add modular reduction.
CMAKE SERVER:       FB_METHD=BASIC    Shift-and-add modular reduction.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FB_METHD=QUICK    Fast reduction modulo a trinomial or pentanomial.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FB_METHD=QUICK    Fast reduction modulo a trinomial or pentanomial.
CMAKE SERVER:       FB_METHD=QUICK    Fast reduction modulo a trinomial or pentanomial.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      Field square root:","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       Field square root:
CMAKE SERVER:       Field square root:
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FB_METHD=BASIC    Square root by repeated squaring.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FB_METHD=BASIC    Square root by repeated squaring.
CMAKE SERVER:       FB_METHD=BASIC    Square root by repeated squaring.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FB_METHD=QUICK    Fast square root extraction.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FB_METHD=QUICK    Fast square root extraction.
CMAKE SERVER:       FB_METHD=QUICK    Fast square root extraction.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      Trace computation:","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       Trace computation:
CMAKE SERVER:       Trace computation:
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FB_METHD=BASIC    Trace computation by repeated squaring.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FB_METHD=BASIC    Trace computation by repeated squaring.
CMAKE SERVER:       FB_METHD=BASIC    Trace computation by repeated squaring.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FB_METHD=QUICK    Fast trace computation.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FB_METHD=QUICK    Fast trace computation.
CMAKE SERVER:       FB_METHD=QUICK    Fast trace computation.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      Quadratic equation solver:","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       Quadratic equation solver:
CMAKE SERVER:       Quadratic equation solver:
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FB_METHD=BASIC    Solve a quadratic equation by half-trace computation.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FB_METHD=BASIC    Solve a quadratic equation by half-trace computation.
CMAKE SERVER:       FB_METHD=BASIC    Solve a quadratic equation by half-trace computation.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FB_METHD=QUICK    Fast solving with precomputed half-traces.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FB_METHD=QUICK    Fast solving with precomputed half-traces.
CMAKE SERVER:       FB_METHD=QUICK    Fast solving with precomputed half-traces.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      Field inversion:","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       Field inversion:
CMAKE SERVER:       Field inversion:
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FB_METHD=BASIC    Inversion by Fermat's Little Theorem.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FB_METHD=BASIC    Inversion by Fermat's Little Theorem.
CMAKE SERVER:       FB_METHD=BASIC    Inversion by Fermat's Little Theorem.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FB_METHD=BINAR    Binary Inversion algorithm.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FB_METHD=BINAR    Binary Inversion algorithm.
CMAKE SERVER:       FB_METHD=BINAR    Binary Inversion algorithm.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FB_METHD=ALMOS    Inversion by the Amost inverse algorithm.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FB_METHD=ALMOS    Inversion by the Amost inverse algorithm.
CMAKE SERVER:       FB_METHD=ALMOS    Inversion by the Amost inverse algorithm.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FB_METHD=EXGCD    Inversion by the Extended Euclidean algorithm.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FB_METHD=EXGCD    Inversion by the Extended Euclidean algorithm.
CMAKE SERVER:       FB_METHD=EXGCD    Inversion by the Extended Euclidean algorithm.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FB_METHD=ITOHT    Inversion by Itoh-Tsuji.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FB_METHD=ITOHT    Inversion by Itoh-Tsuji.
CMAKE SERVER:       FB_METHD=ITOHT    Inversion by Itoh-Tsuji.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FB_METHD=BRUCH    Hardware-friendly inversion by Brunner et al.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FB_METHD=BRUCH    Hardware-friendly inversion by Brunner et al.
CMAKE SERVER:       FB_METHD=BRUCH    Hardware-friendly inversion by Brunner et al.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FB_METHD=LOWER    Pass inversion to the lower level.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FB_METHD=LOWER    Pass inversion to the lower level.
CMAKE SERVER:       FB_METHD=LOWER    Pass inversion to the lower level.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      Field exponentiation:","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       Field exponentiation:
CMAKE SERVER:       Field exponentiation:
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FB_METHD=BASIC    Binary exponentiation.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FB_METHD=BASIC    Binary exponentiation.
CMAKE SERVER:       FB_METHD=BASIC    Binary exponentiation.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FB_METHD=SLIDE    Sliding window exponentiation.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FB_METHD=SLIDE    Sliding window exponentiation.
CMAKE SERVER:       FB_METHD=SLIDE    Sliding window exponentiation.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FB_METHD=MONTY    Constant-time Montgomery powering ladder.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FB_METHD=MONTY    Constant-time Montgomery powering ladder.
CMAKE SERVER:       FB_METHD=MONTY    Constant-time Montgomery powering ladder.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      Iterated squaring/square-root:","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       Iterated squaring/square-root:
CMAKE SERVER:       Iterated squaring/square-root:
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FB_METHD=BASIC    Iterated squaring/square-root by consecutive squaring/square-root.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FB_METHD=BASIC    Iterated squaring/square-root by consecutive squaring/square-root.
CMAKE SERVER:       FB_METHD=BASIC    Iterated squaring/square-root by consecutive squaring/square-root.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      FB_METHD=QUICK    Iterated squaring/square-root by table-based method.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       FB_METHD=QUICK    Iterated squaring/square-root by table-based method.
CMAKE SERVER:       FB_METHD=QUICK    Iterated squaring/square-root by table-based method.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Prime elliptic curve arithmetic configuration (EP module):\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Prime elliptic curve arithmetic configuration (EP module):
CMAKE SERVER: Prime elliptic curve arithmetic configuration (EP module):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   ** Options for the prime elliptic curve module (default = all on):\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    ** Options for the prime elliptic curve module (default = all on):
CMAKE SERVER:    ** Options for the prime elliptic curve module (default = all on):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EP_PLAIN=[off|on] Support for ordinary curves without endomorphisms.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EP_PLAIN=[off|on] Support for ordinary curves without endomorphisms.
CMAKE SERVER:       EP_PLAIN=[off|on] Support for ordinary curves without endomorphisms.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EP_SUPER=[off|on] Support for supersingular curves.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EP_SUPER=[off|on] Support for supersingular curves.
CMAKE SERVER:       EP_SUPER=[off|on] Support for supersingular curves.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EP_ENDOM=[off|on] Support for ordinary curves with endomorphisms.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EP_ENDOM=[off|on] Support for ordinary curves with endomorphisms.
CMAKE SERVER:       EP_ENDOM=[off|on] Support for ordinary curves with endomorphisms.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EP_MIXED=[off|on] Use mixed coordinates.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EP_MIXED=[off|on] Use mixed coordinates.
CMAKE SERVER:       EP_MIXED=[off|on] Use mixed coordinates.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EP_PRECO=[off|on] Build precomputation table for generator.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EP_PRECO=[off|on] Build precomputation table for generator.
CMAKE SERVER:       EP_PRECO=[off|on] Build precomputation table for generator.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EP_DEPTH=w        Width w in [2,8] of precomputation table for fixed point methods.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EP_DEPTH=w        Width w in [2,8] of precomputation table for fixed point methods.
CMAKE SERVER:       EP_DEPTH=w        Width w in [2,8] of precomputation table for fixed point methods.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EP_WIDTH=w        Width w in [2,6] of window processing for unknown point methods.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EP_WIDTH=w        Width w in [2,6] of window processing for unknown point methods.
CMAKE SERVER:       EP_WIDTH=w        Width w in [2,6] of window processing for unknown point methods.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   ** Available prime elliptic curve methods (default = PROJC;LWNAF;COMBS;INTER):\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    ** Available prime elliptic curve methods (default = PROJC;LWNAF;COMBS;INTER):
CMAKE SERVER:    ** Available prime elliptic curve methods (default = PROJC;LWNAF;COMBS;INTER):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      Point representation:","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       Point representation:
CMAKE SERVER:       Point representation:
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EP_METHD=BASIC    Affine coordinates.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EP_METHD=BASIC    Affine coordinates.
CMAKE SERVER:       EP_METHD=BASIC    Affine coordinates.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EP_METHD=PROJC    Jacobian projective coordinates.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EP_METHD=PROJC    Jacobian projective coordinates.
CMAKE SERVER:       EP_METHD=PROJC    Jacobian projective coordinates.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      Variable-base scalar multiplication:","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       Variable-base scalar multiplication:
CMAKE SERVER:       Variable-base scalar multiplication:
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EP_METHD=BASIC    Binary method.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EP_METHD=BASIC    Binary method.
CMAKE SERVER:       EP_METHD=BASIC    Binary method.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EP_METHD=LWNAF    Left-to-right window NAF method (GLV for Koblitz curves).\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EP_METHD=LWNAF    Left-to-right window NAF method (GLV for Koblitz curves).
CMAKE SERVER:       EP_METHD=LWNAF    Left-to-right window NAF method (GLV for Koblitz curves).
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      Fixed-base scalar multiplication:","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       Fixed-base scalar multiplication:
CMAKE SERVER:       Fixed-base scalar multiplication:
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EP_METHD=BASIC    Binary method for fixed point multiplication.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EP_METHD=BASIC    Binary method for fixed point multiplication.
CMAKE SERVER:       EP_METHD=BASIC    Binary method for fixed point multiplication.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EP_METHD=YAOWI    Yao's windowing method for fixed point multiplication","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EP_METHD=YAOWI    Yao's windowing method for fixed point multiplication
CMAKE SERVER:       EP_METHD=YAOWI    Yao's windowing method for fixed point multiplication
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EP_METHD=NAFWI    NAF windowing method for fixed point multiplication.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EP_METHD=NAFWI    NAF windowing method for fixed point multiplication.
CMAKE SERVER:       EP_METHD=NAFWI    NAF windowing method for fixed point multiplication.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EP_METHD=COMBS    Single-table Comb method for fixed point multiplication.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EP_METHD=COMBS    Single-table Comb method for fixed point multiplication.
CMAKE SERVER:       EP_METHD=COMBS    Single-table Comb method for fixed point multiplication.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EP_METHD=COMBD    Double-table Comb method for fixed point multiplication.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EP_METHD=COMBD    Double-table Comb method for fixed point multiplication.
CMAKE SERVER:       EP_METHD=COMBD    Double-table Comb method for fixed point multiplication.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EP_METHD=LWNAF    Left-to-right window NAF method (GLV for Koblitz curves).\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EP_METHD=LWNAF    Left-to-right window NAF method (GLV for Koblitz curves).
CMAKE SERVER:       EP_METHD=LWNAF    Left-to-right window NAF method (GLV for Koblitz curves).
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      Variable-base simultaneous scalar multiplication:","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       Variable-base simultaneous scalar multiplication:
CMAKE SERVER:       Variable-base simultaneous scalar multiplication:
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EP_METHD=BASIC    Multiplication-and-addition simultaneous multiplication.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EP_METHD=BASIC    Multiplication-and-addition simultaneous multiplication.
CMAKE SERVER:       EP_METHD=BASIC    Multiplication-and-addition simultaneous multiplication.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EP_METHD=TRICK    Shamir's trick for simultaneous multiplication.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EP_METHD=TRICK    Shamir's trick for simultaneous multiplication.
CMAKE SERVER:       EP_METHD=TRICK    Shamir's trick for simultaneous multiplication.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EP_METHD=INTER    Interleaving of window NAFs (GLV for Koblitz curves).","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EP_METHD=INTER    Interleaving of window NAFs (GLV for Koblitz curves).
CMAKE SERVER:       EP_METHD=INTER    Interleaving of window NAFs (GLV for Koblitz curves).
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EP_METHD=JOINT    Joint sparse form.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EP_METHD=JOINT    Joint sparse form.
CMAKE SERVER:       EP_METHD=JOINT    Joint sparse form.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Binary elliptic curve arithmetic configuration (EB module):\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Binary elliptic curve arithmetic configuration (EB module):
CMAKE SERVER: Binary elliptic curve arithmetic configuration (EB module):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   ** Options for the binary elliptic curve module (default = on, w = 4):\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    ** Options for the binary elliptic curve module (default = on, w = 4):
CMAKE SERVER:    ** Options for the binary elliptic curve module (default = on, w = 4):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EB_PLAIN=[off|on] Support for ordinary curves without endomorphisms.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EB_PLAIN=[off|on] Support for ordinary curves without endomorphisms.
CMAKE SERVER:       EB_PLAIN=[off|on] Support for ordinary curves without endomorphisms.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EB_KBLTZ=[off|on] Support for Koblitz anomalous binary curves.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EB_KBLTZ=[off|on] Support for Koblitz anomalous binary curves.
CMAKE SERVER:       EB_KBLTZ=[off|on] Support for Koblitz anomalous binary curves.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EB_MIXED=[off|on] Use mixed coordinates.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EB_MIXED=[off|on] Use mixed coordinates.
CMAKE SERVER:       EB_MIXED=[off|on] Use mixed coordinates.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EB_PRECO=[off|on] Build precomputation table for generator.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EB_PRECO=[off|on] Build precomputation table for generator.
CMAKE SERVER:       EB_PRECO=[off|on] Build precomputation table for generator.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EB_DEPTH=w        Width w in [2,8] of precomputation table for fixed point methods.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EB_DEPTH=w        Width w in [2,8] of precomputation table for fixed point methods.
CMAKE SERVER:       EB_DEPTH=w        Width w in [2,8] of precomputation table for fixed point methods.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EB_WIDTH=w        Width w in [2,6] of window processing for unknown point methods.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EB_WIDTH=w        Width w in [2,6] of window processing for unknown point methods.
CMAKE SERVER:       EB_WIDTH=w        Width w in [2,6] of window processing for unknown point methods.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   ** Available binary elliptic curve methods (default = PROJC;LWNAF;COMBS;INTER):\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    ** Available binary elliptic curve methods (default = PROJC;LWNAF;COMBS;INTER):
CMAKE SERVER:    ** Available binary elliptic curve methods (default = PROJC;LWNAF;COMBS;INTER):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      Point representation:","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       Point representation:
CMAKE SERVER:       Point representation:
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EB_METHD=BASIC    Affine coordinates.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EB_METHD=BASIC    Affine coordinates.
CMAKE SERVER:       EB_METHD=BASIC    Affine coordinates.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EB_METHD=PROJC    Projective coordinates (L�pez-Dahab for ordinary curves).\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EB_METHD=PROJC    Projective coordinates (L�pez-Dahab for ordinary curves).
CMAKE SERVER:       EB_METHD=PROJC    Projective coordinates (L�pez-Dahab for ordinary curves).
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      Variable-base scalar multiplication:","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       Variable-base scalar multiplication:
CMAKE SERVER:       Variable-base scalar multiplication:
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EB_METHD=BASIC    Binary double-and-add method.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EB_METHD=BASIC    Binary double-and-add method.
CMAKE SERVER:       EB_METHD=BASIC    Binary double-and-add method.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EB_METHD=LODAH    Lopez-Dahab constant-time point multiplication.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EB_METHD=LODAH    Lopez-Dahab constant-time point multiplication.
CMAKE SERVER:       EB_METHD=LODAH    Lopez-Dahab constant-time point multiplication.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EB_METHD=LWNAF    Left-to-right window (T)NAF method.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EB_METHD=LWNAF    Left-to-right window (T)NAF method.
CMAKE SERVER:       EB_METHD=LWNAF    Left-to-right window (T)NAF method.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EB_METHD=RWNAF    Right-to-left window (T)NAF method.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EB_METHD=RWNAF    Right-to-left window (T)NAF method.
CMAKE SERVER:       EB_METHD=RWNAF    Right-to-left window (T)NAF method.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EB_METHD=HALVE    Halving method.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EB_METHD=HALVE    Halving method.
CMAKE SERVER:       EB_METHD=HALVE    Halving method.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      Fixed-base scalar multiplication:","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       Fixed-base scalar multiplication:
CMAKE SERVER:       Fixed-base scalar multiplication:
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EB_METHD=BASIC    Binary method for fixed point multiplication.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EB_METHD=BASIC    Binary method for fixed point multiplication.
CMAKE SERVER:       EB_METHD=BASIC    Binary method for fixed point multiplication.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EB_METHD=YAOWI    Yao's windowing method for fixed point multiplication","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EB_METHD=YAOWI    Yao's windowing method for fixed point multiplication
CMAKE SERVER:       EB_METHD=YAOWI    Yao's windowing method for fixed point multiplication
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EB_METHD=NAFWI    NAF windowing method for fixed point multiplication.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EB_METHD=NAFWI    NAF windowing method for fixed point multiplication.
CMAKE SERVER:       EB_METHD=NAFWI    NAF windowing method for fixed point multiplication.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EB_METHD=COMBS    Single-table Comb method for fixed point multiplication.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EB_METHD=COMBS    Single-table Comb method for fixed point multiplication.
CMAKE SERVER:       EB_METHD=COMBS    Single-table Comb method for fixed point multiplication.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EB_METHD=COMBD    Double-table Comb method for fixed point multiplication.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EB_METHD=COMBD    Double-table Comb method for fixed point multiplication.
CMAKE SERVER:       EB_METHD=COMBD    Double-table Comb method for fixed point multiplication.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EB_METHD=LWNAF    Left-to-right window (T)NAF method.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EB_METHD=LWNAF    Left-to-right window (T)NAF method.
CMAKE SERVER:       EB_METHD=LWNAF    Left-to-right window (T)NAF method.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      Variable-base simultaneous scalar multiplication:","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       Variable-base simultaneous scalar multiplication:
CMAKE SERVER:       Variable-base simultaneous scalar multiplication:
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EB_METHD=BASIC    Multiplication-and-addition simultaneous multiplication.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EB_METHD=BASIC    Multiplication-and-addition simultaneous multiplication.
CMAKE SERVER:       EB_METHD=BASIC    Multiplication-and-addition simultaneous multiplication.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EB_METHD=TRICK    Shamir's trick for simultaneous multiplication.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EB_METHD=TRICK    Shamir's trick for simultaneous multiplication.
CMAKE SERVER:       EB_METHD=TRICK    Shamir's trick for simultaneous multiplication.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EB_METHD=INTER    Interleaving of window (T)NAFs.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EB_METHD=INTER    Interleaving of window (T)NAFs.
CMAKE SERVER:       EB_METHD=INTER    Interleaving of window (T)NAFs.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EB_METHD=JOINT    Joint sparse form.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EB_METHD=JOINT    Joint sparse form.
CMAKE SERVER:       EB_METHD=JOINT    Joint sparse form.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Elliptic Edwards curve over prime fields arithmetic configuration (ED module):\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Elliptic Edwards curve over prime fields arithmetic configuration (ED module):
CMAKE SERVER: Elliptic Edwards curve over prime fields arithmetic configuration (ED module):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   ** Options for the prime elliptic Edwards curve module (default = all on):","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    ** Options for the prime elliptic Edwards curve module (default = all on):
CMAKE SERVER:    ** Options for the prime elliptic Edwards curve module (default = all on):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      ED_PRECO=[off|on] Build precomputation table for generator.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       ED_PRECO=[off|on] Build precomputation table for generator.
CMAKE SERVER:       ED_PRECO=[off|on] Build precomputation table for generator.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      ED_DEPTH=w        Width w in [2,6] of precomputation table for fixed point methods.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       ED_DEPTH=w        Width w in [2,6] of precomputation table for fixed point methods.
CMAKE SERVER:       ED_DEPTH=w        Width w in [2,6] of precomputation table for fixed point methods.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      ED_WIDTH=w        Width w in [2,6] of window processing for unknown point methods.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       ED_WIDTH=w        Width w in [2,6] of window processing for unknown point methods.
CMAKE SERVER:       ED_WIDTH=w        Width w in [2,6] of window processing for unknown point methods.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   ** Available prime elliptic Edwards curve methods (default = PROJC;LWNAF;COMBS;INTER):","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    ** Available prime elliptic Edwards curve methods (default = PROJC;LWNAF;COMBS;INTER):
CMAKE SERVER:    ** Available prime elliptic Edwards curve methods (default = PROJC;LWNAF;COMBS;INTER):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EP_METHD=PROJC  \t Simple projective twisted Edwards coordinates.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EP_METHD=PROJC  	 Simple projective twisted Edwards coordinates.
CMAKE SERVER:       EP_METHD=PROJC  	 Simple projective twisted Edwards coordinates.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EP_METHD=EXTND \t Extended projective twisted Edwards coordinates.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EP_METHD=EXTND 	 Extended projective twisted Edwards coordinates.
CMAKE SERVER:       EP_METHD=EXTND 	 Extended projective twisted Edwards coordinates.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      *** variable-base multiplication method ***","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       *** variable-base multiplication method ***
CMAKE SERVER:       *** variable-base multiplication method ***
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      ED_METHD=BASIC    \tBinary method.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       ED_METHD=BASIC    	Binary method.
CMAKE SERVER:       ED_METHD=BASIC    	Binary method.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      ED_METHD=SLIDE    \tSliding window method.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       ED_METHD=SLIDE    	Sliding window method.
CMAKE SERVER:       ED_METHD=SLIDE    	Sliding window method.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      ED_METHD=MONTY    \tMontgomery ladder method.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       ED_METHD=MONTY    	Montgomery ladder method.
CMAKE SERVER:       ED_METHD=MONTY    	Montgomery ladder method.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      ED_METHD=FIXWI    \t2-bit fixed window method.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       ED_METHD=FIXWI    	2-bit fixed window method.
CMAKE SERVER:       ED_METHD=FIXWI    	2-bit fixed window method.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      ED_METHD=LWNAF    \tLeft-to-right window NAF method (GLV for Koblitz curves).\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       ED_METHD=LWNAF    	Left-to-right window NAF method (GLV for Koblitz curves).
CMAKE SERVER:       ED_METHD=LWNAF    	Left-to-right window NAF method (GLV for Koblitz curves).
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      *** fixed-base multiplication method ***","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       *** fixed-base multiplication method ***
CMAKE SERVER:       *** fixed-base multiplication method ***
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      ED_METHD=BASIC    \tBinary method for fixed point multiplication.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       ED_METHD=BASIC    	Binary method for fixed point multiplication.
CMAKE SERVER:       ED_METHD=BASIC    	Binary method for fixed point multiplication.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      ED_METHD=YAOWI    \tYao's windowing method for fixed point multiplication","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       ED_METHD=YAOWI    	Yao's windowing method for fixed point multiplication
CMAKE SERVER:       ED_METHD=YAOWI    	Yao's windowing method for fixed point multiplication
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      ED_METHD=NAFWI    \tNAF windowing method for fixed point multiplication.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       ED_METHD=NAFWI    	NAF windowing method for fixed point multiplication.
CMAKE SERVER:       ED_METHD=NAFWI    	NAF windowing method for fixed point multiplication.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      ED_METHD=COMBS    \tSingle-table Comb method for fixed point multiplication.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       ED_METHD=COMBS    	Single-table Comb method for fixed point multiplication.
CMAKE SERVER:       ED_METHD=COMBS    	Single-table Comb method for fixed point multiplication.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      ED_METHD=COMBD    \tDouble-table Comb method for fixed point multiplication.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       ED_METHD=COMBD    	Double-table Comb method for fixed point multiplication.
CMAKE SERVER:       ED_METHD=COMBD    	Double-table Comb method for fixed point multiplication.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      ED_METHD=LWNAF    \tLeft-to-right window NAF method (GLV for Koblitz curves).\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       ED_METHD=LWNAF    	Left-to-right window NAF method (GLV for Koblitz curves).
CMAKE SERVER:       ED_METHD=LWNAF    	Left-to-right window NAF method (GLV for Koblitz curves).
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      ED_METHD=LWNAF_MIXED Left-to-right window NAF mixed method (GLV for Koblitz curves).\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       ED_METHD=LWNAF_MIXED Left-to-right window NAF mixed method (GLV for Koblitz curves).
CMAKE SERVER:       ED_METHD=LWNAF_MIXED Left-to-right window NAF mixed method (GLV for Koblitz curves).
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      *** variable-base simultaneous multiplication method ***","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       *** variable-base simultaneous multiplication method ***
CMAKE SERVER:       *** variable-base simultaneous multiplication method ***
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      ED_METHD=BASIC    Multiplication-and-addition simultaneous multiplication.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       ED_METHD=BASIC    Multiplication-and-addition simultaneous multiplication.
CMAKE SERVER:       ED_METHD=BASIC    Multiplication-and-addition simultaneous multiplication.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      ED_METHD=TRICK    Shamir's trick for simultaneous multiplication.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       ED_METHD=TRICK    Shamir's trick for simultaneous multiplication.
CMAKE SERVER:       ED_METHD=TRICK    Shamir's trick for simultaneous multiplication.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      ED_METHD=INTER    Interleaving of window NAFs (GLV for Koblitz curves).","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       ED_METHD=INTER    Interleaving of window NAFs (GLV for Koblitz curves).
CMAKE SERVER:       ED_METHD=INTER    Interleaving of window NAFs (GLV for Koblitz curves).
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      ED_METHD=JOINT    Joint sparse form.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       ED_METHD=JOINT    Joint sparse form.
CMAKE SERVER:       ED_METHD=JOINT    Joint sparse form.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      Note: these methods must be given in order. Ex: ED_METHD=\"EXTND;LWNAF;COMBD;TRICK\"\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       Note: these methods must be given in order. Ex: ED_METHD="EXTND;LWNAF;COMBD;TRICK"
CMAKE SERVER:       Note: these methods must be given in order. Ex: ED_METHD="EXTND;LWNAF;COMBD;TRICK"
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Elliptic curve cryptography configuration (EC module):\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Elliptic curve cryptography configuration (EC module):
CMAKE SERVER: Elliptic curve cryptography configuration (EC module):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   ** Options for the binary elliptic curve module (default = on):\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    ** Options for the binary elliptic curve module (default = on):
CMAKE SERVER:    ** Options for the binary elliptic curve module (default = on):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EC_ENDOM=[off|on] Prefer (prime or binary) curves with endomorphisms.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EC_ENDOM=[off|on] Prefer (prime or binary) curves with endomorphisms.
CMAKE SERVER:       EC_ENDOM=[off|on] Prefer (prime or binary) curves with endomorphisms.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   ** Available elliptic curve methods (default = PRIME):\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    ** Available elliptic curve methods (default = PRIME):
CMAKE SERVER:    ** Available elliptic curve methods (default = PRIME):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EC_METHD=PRIME    Use prime curves.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EC_METHD=PRIME    Use prime curves.
CMAKE SERVER:       EC_METHD=PRIME    Use prime curves.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EC_METHD=CHAR2    Use binary curves.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EC_METHD=CHAR2    Use binary curves.
CMAKE SERVER:       EC_METHD=CHAR2    Use binary curves.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      EC_METHD=EDWARD   Use prime Edwards curves.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       EC_METHD=EDWARD   Use prime Edwards curves.
CMAKE SERVER:       EC_METHD=EDWARD   Use prime Edwards curves.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Bilinear pairings arithmetic configuration (PP module):\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Bilinear pairings arithmetic configuration (PP module):
CMAKE SERVER: Bilinear pairings arithmetic configuration (PP module):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   ** Available bilinear pairing methods (default = BASIC;OATEP):\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    ** Available bilinear pairing methods (default = BASIC;OATEP):
CMAKE SERVER:    ** Available bilinear pairing methods (default = BASIC;OATEP):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      Extension field arithmetic:","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       Extension field arithmetic:
CMAKE SERVER:       Extension field arithmetic:
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      PP_METHD=BASIC    Basic extension field arithmetic.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       PP_METHD=BASIC    Basic extension field arithmetic.
CMAKE SERVER:       PP_METHD=BASIC    Basic extension field arithmetic.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      PP_METHD=LAZYR    Lazy reduced extension field arithmetic.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       PP_METHD=LAZYR    Lazy reduced extension field arithmetic.
CMAKE SERVER:       PP_METHD=LAZYR    Lazy reduced extension field arithmetic.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      Pairing computation:","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       Pairing computation:
CMAKE SERVER:       Pairing computation:
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      PP_METHD=TATEP    Tate pairing.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       PP_METHD=TATEP    Tate pairing.
CMAKE SERVER:       PP_METHD=TATEP    Tate pairing.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      PP_METHD=WEILP    Weil pairing.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       PP_METHD=WEILP    Weil pairing.
CMAKE SERVER:       PP_METHD=WEILP    Weil pairing.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      PP_METHD=OATEP    Optimal ate pairing.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       PP_METHD=OATEP    Optimal ate pairing.
CMAKE SERVER:       PP_METHD=OATEP    Optimal ate pairing.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Message digest configuration (MD module):\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Message digest configuration (MD module):
CMAKE SERVER: Message digest configuration (MD module):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   ** Available hash functions (default = SH256):\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    ** Available hash functions (default = SH256):
CMAKE SERVER:    ** Available hash functions (default = SH256):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      MD_METHD=SHONE        SHA-1 hash function.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       MD_METHD=SHONE        SHA-1 hash function.
CMAKE SERVER:       MD_METHD=SHONE        SHA-1 hash function.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      MD_METHD=SH224        SHA-224 hash function.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       MD_METHD=SH224        SHA-224 hash function.
CMAKE SERVER:       MD_METHD=SH224        SHA-224 hash function.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      MD_METHD=SH256        SHA-256 hash function.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       MD_METHD=SH256        SHA-256 hash function.
CMAKE SERVER:       MD_METHD=SH256        SHA-256 hash function.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      MD_METHD=SH384        SHA-384 hash function.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       MD_METHD=SH384        SHA-384 hash function.
CMAKE SERVER:       MD_METHD=SH384        SHA-384 hash function.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      MD_METHD=SH512        SHA-512 hash function.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       MD_METHD=SH512        SHA-512 hash function.
CMAKE SERVER:       MD_METHD=SH512        SHA-512 hash function.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      MD_METHD=B2S160       BLAKE2s-160 hash function.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       MD_METHD=B2S160       BLAKE2s-160 hash function.
CMAKE SERVER:       MD_METHD=B2S160       BLAKE2s-160 hash function.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      MD_METHD=B2S256       BLAKE2s-256 hash function.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       MD_METHD=B2S256       BLAKE2s-256 hash function.
CMAKE SERVER:       MD_METHD=B2S256       BLAKE2s-256 hash function.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Cryptographic protocols configuration (CP module):\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Cryptographic protocols configuration (CP module):
CMAKE SERVER: Cryptographic protocols configuration (CP module):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   ** Options for the cryptographic protocols module (default = PKCS1):\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    ** Options for the cryptographic protocols module (default = PKCS1):
CMAKE SERVER:    ** Options for the cryptographic protocols module (default = PKCS1):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      CP_RSAPD=BASIC    RSA with basic padding.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       CP_RSAPD=BASIC    RSA with basic padding.
CMAKE SERVER:       CP_RSAPD=BASIC    RSA with basic padding.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      CP_RSAPD=PKCS1    RSA with PKCS#1 v1.5 padding.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       CP_RSAPD=PKCS1    RSA with PKCS#1 v1.5 padding.
CMAKE SERVER:       CP_RSAPD=PKCS1    RSA with PKCS#1 v1.5 padding.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      CP_RSAPD=PKCS2    RSA with PKCS#1 v2.1 padding.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       CP_RSAPD=PKCS2    RSA with PKCS#1 v2.1 padding.
CMAKE SERVER:       CP_RSAPD=PKCS2    RSA with PKCS#1 v2.1 padding.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   ** Available cryptographic protocols methods (default = QUICK;BASIC):\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    ** Available cryptographic protocols methods (default = QUICK;BASIC):
CMAKE SERVER:    ** Available cryptographic protocols methods (default = QUICK;BASIC):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      CP_METHD=BASIC    Slow RSA decryption/signature.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       CP_METHD=BASIC    Slow RSA decryption/signature.
CMAKE SERVER:       CP_METHD=BASIC    Slow RSA decryption/signature.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"      CP_METHD=QUICK    Fast RSA decryption/signature using CRT.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:       CP_METHD=QUICK    Fast RSA decryption/signature using CRT.
CMAKE SERVER:       CP_METHD=QUICK    Fast RSA decryption/signature using CRT.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Available pseudo-random number generators (default = HASH):\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Available pseudo-random number generators (default = HASH):
CMAKE SERVER: Available pseudo-random number generators (default = HASH):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   RAND=HASH      Use the HASH-DRBG generator. (recommended)","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    RAND=HASH      Use the HASH-DRBG generator. (recommended)
CMAKE SERVER:    RAND=HASH      Use the HASH-DRBG generator. (recommended)
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   RAND=UDEV      Use the operating system underlying generator.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    RAND=UDEV      Use the operating system underlying generator.
CMAKE SERVER:    RAND=UDEV      Use the operating system underlying generator.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   RAND=FIPS      Use the FIPS 186-2 (CN1) SHA1-based generator.","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    RAND=FIPS      Use the FIPS 186-2 (CN1) SHA1-based generator.
CMAKE SERVER:    RAND=FIPS      Use the FIPS 186-2 (CN1) SHA1-based generator.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   RAND=CALL      Override the generator with a callback.\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    RAND=CALL      Override the generator with a callback.
CMAKE SERVER:    RAND=CALL      Override the generator with a callback.
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Available random number generator seeders (default = UDEV):\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Available random number generator seeders (default = UDEV):
CMAKE SERVER: Available random number generator seeders (default = UDEV):
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   SEED=WCGR      Use Windows' CryptGenRandom. (recommended)","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    SEED=WCGR      Use Windows' CryptGenRandom. (recommended)
CMAKE SERVER:    SEED=WCGR      Use Windows' CryptGenRandom. (recommended)
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   SEED=DEV       Use blocking /dev/random. (recommended)","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    SEED=DEV       Use blocking /dev/random. (recommended)
CMAKE SERVER:    SEED=DEV       Use blocking /dev/random. (recommended)
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   SEED=UDEV      Use non-blocking /dev/urandom. (recommended)","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    SEED=UDEV      Use non-blocking /dev/urandom. (recommended)
CMAKE SERVER:    SEED=UDEV      Use non-blocking /dev/urandom. (recommended)
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   SEED=LIBC      Use the libc rand()/random() functions. (insecure!)","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    SEED=LIBC      Use the libc rand()/random() functions. (insecure!)
CMAKE SERVER:    SEED=LIBC      Use the libc rand()/random() functions. (insecure!)
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"   SEED=ZERO      Use a zero seed. (insecure!)\n","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER:    SEED=ZERO      Use a zero seed. (insecure!)
CMAKE SERVER:    SEED=ZERO      Use a zero seed. (insecure!)
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Configured operating system: RELIC_NONE","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Configured operating system: RELIC_NONE
CMAKE SERVER: Configured operating system: RELIC_NONE
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Looking for pthread.h","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Looking for pthread.h
CMAKE SERVER: Looking for pthread.h
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","progressCurrent":377,"progressMaximum":1000,"progressMessage":"Configuring","progressMinimum":0,"type":"progress"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Looking for pthread.h - found","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Looking for pthread.h - found
CMAKE SERVER: Looking for pthread.h - found
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Looking for pthread_create","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Looking for pthread_create
CMAKE SERVER: Looking for pthread_create
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","progressCurrent":398,"progressMaximum":1000,"progressMessage":"Configuring","progressMinimum":0,"type":"progress"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Looking for pthread_create - found","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Looking for pthread_create - found
CMAKE SERVER: Looking for pthread_create - found
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Found Threads: TRUE  ","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Found Threads: TRUE  
CMAKE SERVER: Found Threads: TRUE  
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Compiler flags: -pipe -std=c99  -Wall   -O3 -funroll-loops -fomit-frame-pointer -pthread","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Compiler flags: -pipe -std=c99  -Wall   -O3 -funroll-loops -fomit-frame-pointer -pthread
CMAKE SERVER: Compiler flags: -pipe -std=c99  -Wall   -O3 -funroll-loops -fomit-frame-pointer -pthread
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Linker flags: -L/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls/bls-signatures/contrib/relic/src/low/easy/ ","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Linker flags: -L/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls/bls-signatures/contrib/relic/src/low/easy/ 
CMAKE SERVER: Linker flags: -L/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls/bls-signatures/contrib/relic/src/low/easy/ 
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Configured /home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls/bls-signatures/contrib/relic/include/relic_conf.h.in","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Configured /home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls/bls-signatures/contrib/relic/include/relic_conf.h.in
CMAKE SERVER: Configured /home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls/bls-signatures/contrib/relic/include/relic_conf.h.in
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","progressCurrent":418,"progressMaximum":1000,"progressMessage":"Configuring","progressMinimum":0,"type":"progress"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Could NOT find Doxygen (missing: DOXYGEN_EXECUTABLE) ","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Could NOT find Doxygen (missing: DOXYGEN_EXECUTABLE) 
CMAKE SERVER: Could NOT find Doxygen (missing: DOXYGEN_EXECUTABLE) 
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","progressCurrent":924,"progressMaximum":1000,"progressMessage":"Configuring","progressMinimum":0,"type":"progress"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","progressCurrent":950,"progressMaximum":1000,"progressMessage":"Configuring","progressMinimum":0,"type":"progress"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","progressCurrent":974,"progressMaximum":1000,"progressMessage":"Configuring","progressMinimum":0,"type":"progress"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","progressCurrent":1000,"progressMaximum":1000,"progressMessage":"Configuring","progressMinimum":0,"type":"progress"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Configuring done","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Configuring done
CMAKE SERVER: Configuring done
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"configure","type":"reply"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"type":"compute"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"compute","progressCurrent":250,"progressMaximum":1000,"progressMessage":"Generating","progressMinimum":0,"type":"progress"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"compute","progressCurrent":500,"progressMaximum":1000,"progressMessage":"Generating","progressMinimum":0,"type":"progress"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"compute","progressCurrent":750,"progressMaximum":1000,"progressMessage":"Generating","progressMinimum":0,"type":"progress"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"compute","progressCurrent":1000,"progressMaximum":1000,"progressMessage":"Generating","progressMinimum":0,"type":"progress"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"compute","message":"Generating done","type":"message"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: Generating done
CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"cookie":"","inReplyTo":"compute","type":"reply"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"type":"cmakeInputs"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"buildFiles":[{"isCMake":true,"isTemporary":false,"sources":["/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeDetermineSystem.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Platform/Android-Determine.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeSystem.cmake.in","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeSystemSpecificInitialize.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Platform/Android-Initialize.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeDetermineCCompiler.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeDetermineCompiler.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Platform/Android-Determine-C.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Platform/Android/Determine-Compiler.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeFindBinUtils.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Compiler/Clang-FindBinUtils.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeCCompiler.cmake.in","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeDetermineCXXCompiler.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeDetermineCompiler.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Platform/Android-Determine-CXX.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Platform/Android/Determine-Compiler.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeFindBinUtils.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Compiler/Clang-FindBinUtils.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeCXXCompiler.cmake.in","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeSystemSpecificInformation.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeGenericSystem.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Platform/Android.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Platform/Linux.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Platform/UnixPaths.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeCInformation.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeLanguageInformation.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Compiler/Clang-C.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Compiler/Clang.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Compiler/CMakeCommonCompilerMacros.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Compiler/GNU.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Compiler/CMakeCommonCompilerMacros.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Platform/Android-Clang-C.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Platform/Android-Clang.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeCommonLanguageInclude.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeTestCCompiler.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeTestCompilerCommon.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeDetermineCompilerABI.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeParseImplicitLinkInfo.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeCCompilerABI.c","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeDetermineCompileFeatures.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Internal/FeatureTesting.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Compiler/Clang-C-FeatureTests.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Compiler/Clang-C-FeatureTests.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Compiler/Clang-C-FeatureTests.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeCCompiler.cmake.in","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeCXXInformation.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeLanguageInformation.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Compiler/Clang-CXX.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Compiler/Clang.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Platform/Android-Clang-CXX.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Platform/Android-Clang.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeCommonLanguageInclude.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeTestCXXCompiler.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeTestCompilerCommon.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeDetermineCompilerABI.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeParseImplicitLinkInfo.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeCXXCompilerABI.cpp","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeDetermineCompileFeatures.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Internal/FeatureTesting.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Compiler/Clang-CXX-FeatureTests.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Compiler/Clang-CXX-TestableFeatures.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Compiler/Clang-CXX-FeatureTests.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Compiler/Clang-CXX-TestableFeatures.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Compiler/Clang-CXX-FeatureTests.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Compiler/Clang-CXX-TestableFeatures.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Compiler/Clang-CXX-FeatureTests.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Compiler/Clang-CXX-TestableFeatures.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeCXXCompiler.cmake.in","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/FindThreads.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CheckLibraryExists.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CheckSymbolExists.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CheckIncludeFile.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CheckIncludeFile.c.in","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeConfigurableFile.in","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/FindPackageHandleStandardArgs.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/FindPackageMessage.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/FindDoxygen.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/FindPackageHandleStandardArgs.cmake","/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/FindPackageMessage.cmake"]},{"isCMake":false,"isTemporary":false,"sources":["CMakeLists.txt","/home/tops/Android/Sdk/ndk/21.1.6352462/build/cmake/android.toolchain.cmake","/home/tops/Android/Sdk/ndk/21.1.6352462/build/cmake/platforms.cmake","/home/tops/Android/Sdk/ndk/21.1.6352462/build/cmake/android.toolchain.cmake","dashj-bls/CMakeLists.txt","dashj-bls/bls-signatures.cmake","dashj-bls/bls-signatures-src.cmake","dashj-bls/bls-signatures/contrib/relic/CMakeLists.txt","dashj-bls/bls-signatures/contrib/relic/cmake/arch.cmake","dashj-bls/bls-signatures/contrib/relic/cmake/bn.cmake","dashj-bls/bls-signatures/contrib/relic/cmake/fp.cmake","dashj-bls/bls-signatures/contrib/relic/cmake/fpx.cmake","dashj-bls/bls-signatures/contrib/relic/cmake/fb.cmake","dashj-bls/bls-signatures/contrib/relic/cmake/ep.cmake","dashj-bls/bls-signatures/contrib/relic/cmake/eb.cmake","dashj-bls/bls-signatures/contrib/relic/cmake/ed.cmake","dashj-bls/bls-signatures/contrib/relic/cmake/ec.cmake","dashj-bls/bls-signatures/contrib/relic/cmake/pp.cmake","dashj-bls/bls-signatures/contrib/relic/cmake/md.cmake","dashj-bls/bls-signatures/contrib/relic/cmake/cp.cmake","dashj-bls/bls-signatures/contrib/relic/cmake/rand.cmake","dashj-bls/bls-signatures/contrib/relic/include/relic_conf.h.in","dashj-bls/bls-signatures/contrib/relic/cmake/doxygen.cmake","dashj-bls/bls-signatures/contrib/relic/src/CMakeLists.txt"]},{"isCMake":false,"isTemporary":true,"sources":["../.cxx/cmake/prodDebug/arm64-v8a/CMakeFiles/3.10.2/CMakeSystem.cmake","../.cxx/cmake/prodDebug/arm64-v8a/CMakeFiles/3.10.2/CMakeCCompiler.cmake","../.cxx/cmake/prodDebug/arm64-v8a/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake","../.cxx/cmake/prodDebug/arm64-v8a/CMakeFiles/feature_tests.c","../.cxx/cmake/prodDebug/arm64-v8a/CMakeFiles/feature_tests.c","../.cxx/cmake/prodDebug/arm64-v8a/CMakeFiles/feature_tests.c","../.cxx/cmake/prodDebug/arm64-v8a/CMakeFiles/3.10.2/CMakeCCompiler.cmake","../.cxx/cmake/prodDebug/arm64-v8a/CMakeFiles/feature_tests.cxx","../.cxx/cmake/prodDebug/arm64-v8a/CMakeFiles/feature_tests.cxx","../.cxx/cmake/prodDebug/arm64-v8a/CMakeFiles/feature_tests.cxx","../.cxx/cmake/prodDebug/arm64-v8a/CMakeFiles/feature_tests.cxx","../.cxx/cmake/prodDebug/arm64-v8a/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake"]}],"cmakeRootDirectory":"/home/tops/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10","cookie":"","inReplyTo":"cmakeInputs","sourceDirectory":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp","type":"reply"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"type":"codemodel"}

CMAKE SERVER: ]== "CMake Server" ==]

CMAKE SERVER: 

CMAKE SERVER: [== "CMake Server" ==[

CMAKE SERVER: {"configurations":[{"name":"Debug","projects":[{"buildDirectory":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a/dashj-bls","name":"BLS","sourceDirectory":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls","targets":[{"artifacts":["/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a/dashj-bls/libbls.a"],"buildDirectory":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a/dashj-bls","fileGroups":[{"compileFlags":"-g -DANDROID -fdata-sections -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security   -O0 -fno-limit-debug-info  -fPIC   -std=gnu++11","includePath":[{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/."},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/bls-signatures/src"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a/dashj-bls/bls-signatures/contrib/relic/include"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/bls-signatures/contrib/relic/include"},{"path":"/usr/include/aarch64-linux-android"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls/bls-signatures/contrib/relic/include"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a/bls-signatures/src/contrib/relic/include"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls/bls-signatures/src/contrib/catch"}],"isGenerated":false,"language":"CXX","sources":["bls-signatures/src/chaincode.cpp"]}],"fullName":"libbls.a","linkerLanguage":"CXX","name":"bls","sourceDirectory":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls","sysroot":"/home/tops/Android/Sdk/ndk/21.1.6352462/toolchains/llvm/prebuilt/linux-x86_64/sysroot","type":"STATIC_LIBRARY"},{"artifacts":["/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/build/intermediates/cmake/prodDebug/obj/arm64-v8a/libdashjbls.so"],"buildDirectory":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a/dashj-bls","fileGroups":[{"compileFlags":"-g -DANDROID -fdata-sections -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security   -O0 -fno-limit-debug-info  -fPIC   -std=gnu++11","defines":["dashjbls_EXPORTS"],"includePath":[{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/."},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/bls-signatures/src"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a/dashj-bls/bls-signatures/contrib/relic/include"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/bls-signatures/contrib/relic/include"},{"path":"/usr/include/aarch64-linux-android"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls/bls-signatures/contrib/relic/include"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a/bls-signatures/src/contrib/relic/include"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls/bls-signatures/src/contrib/catch"}],"isGenerated":false,"language":"CXX","sources":["dashj-bls-signature-wrapper.cpp","stdio.cpp"]}],"fullName":"libdashjbls.so","linkFlags":"-Wl,--exclude-libs,libgcc.a -Wl,--exclude-libs,libgcc_real.a -Wl,--exclude-libs,libatomic.a -static-libstdc++ -Wl,--build-id -Wl,--fatal-warnings -Wl,--no-undefined -Qunused-arguments","linkLibraries":"libbls.a libblstmp.a bls-signatures/contrib/relic/lib/librelic_s.a /home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/build/intermediates/cmake/prodDebug/obj/arm64-v8a/libpthread.so -lm -latomic -lm","linkerLanguage":"CXX","name":"dashjbls","sourceDirectory":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls","sysroot":"/home/tops/Android/Sdk/ndk/21.1.6352462/toolchains/llvm/prebuilt/linux-x86_64/sysroot","type":"SHARED_LIBRARY"},{"artifacts":["/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a/dashj-bls/bls-signatures/contrib/relic/lib/librelic_s.a"],"buildDirectory":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a/dashj-bls/bls-signatures/contrib/relic/src","fileGroups":[{"compileFlags":"-pipe -std=c99  -Wall   -O3 -funroll-loops -fomit-frame-pointer -pthread -O0 -fno-limit-debug-info  -fPIC  ","includePath":[{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/."},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/bls-signatures/src"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a/dashj-bls/bls-signatures/contrib/relic/include"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/bls-signatures/contrib/relic/include"},{"path":"/usr/include/aarch64-linux-android"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls/bls-signatures/contrib/relic/include"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls/bls-signatures/contrib/relic/include/low"}],"isGenerated":false,"language":"C","sources":["relic_err.c","relic_core.c","relic_conf.c","relic_pool.c","relic_util.c","arch/relic_arch_none.c","rand/relic_rand_core.c","rand/relic_rand_hash.c","bn/relic_bn_add.c","bn/relic_bn_cmp.c","bn/relic_bn_div.c","bn/relic_bn_factor.c","bn/relic_bn_gcd.c","bn/relic_bn_lcm.c","bn/relic_bn_mem.c","bn/relic_bn_mod.c","bn/relic_bn_mul.c","bn/relic_bn_mxp.c","bn/relic_bn_prime.c","bn/relic_bn_rec.c","bn/relic_bn_shift.c","bn/relic_bn_smb.c","bn/relic_bn_sqr.c","bn/relic_bn_srt.c","bn/relic_bn_util.c","dv/relic_dv_mem.c","dv/relic_dv_util.c","fp/relic_fp_add.c","fp/relic_fp_cmp.c","fp/relic_fp_exp.c","fp/relic_fp_inv.c","fp/relic_fp_mul.c","fp/relic_fp_param.c","fp/relic_fp_prime.c","fp/relic_fp_rdc.c","fp/relic_fp_shift.c","fp/relic_fp_sqr.c","fp/relic_fp_srt.c","fp/relic_fp_util.c","fpx/relic_fp12_mul.c","fpx/relic_fp12_sqr.c","fpx/relic_fp18_mul.c","fpx/relic_fp18_sqr.c","fpx/relic_fp2_mul.c","fpx/relic_fp2_sqr.c","fpx/relic_fp3_mul.c","fpx/relic_fp3_sqr.c","fpx/relic_fp6_mul.c","fpx/relic_fp6_sqr.c","fpx/relic_fpx_add.c","fpx/relic_fpx_cmp.c","fpx/relic_fpx_exp.c","fpx/relic_fpx_frb.c","fpx/relic_fpx_inv.c","fpx/relic_fpx_pck.c","fpx/relic_fpx_rdc.c","fpx/relic_fpx_srt.c","fpx/relic_fpx_util.c","fb/relic_fb_add.c","fb/relic_fb_cmp.c","fb/relic_fb_exp.c","fb/relic_fb_inv.c","fb/relic_fb_itr.c","fb/relic_fb_mul.c","fb/relic_fb_param.c","fb/relic_fb_poly.c","fb/relic_fb_rdc.c","fb/relic_fb_shift.c","fb/relic_fb_slv.c","fb/relic_fb_sqr.c","fb/relic_fb_srt.c","fb/relic_fb_trc.c","fb/relic_fb_util.c","fbx/relic_fb2_inv.c","fbx/relic_fb2_mul.c","fbx/relic_fb2_slv.c","fbx/relic_fb2_sqr.c","ep/relic_ep_add.c","ep/relic_ep_curve.c","ep/relic_ep_dbl.c","ep/relic_ep_map.c","ep/relic_ep_mul.c","ep/relic_ep_mul_fix.c","ep/relic_ep_mul_sim.c","ep/relic_ep_neg.c","ep/relic_ep_norm.c","ep/relic_ep_param.c","ep/relic_ep_pck.c","ep/relic_ep_util.c","epx/relic_ep2_add.c","epx/relic_ep2_curve.c","epx/relic_ep2_dbl.c","epx/relic_ep2_frb.c","epx/relic_ep2_map.c","epx/relic_ep2_mul.c","epx/relic_ep2_mul_fix.c","epx/relic_ep2_mul_sim.c","epx/relic_ep2_neg.c","epx/relic_ep2_norm.c","epx/relic_ep2_pck.c","epx/relic_ep2_util.c","eb/relic_eb_add.c","eb/relic_eb_curve.c","eb/relic_eb_dbl.c","eb/relic_eb_frb.c","eb/relic_eb_hlv.c","eb/relic_eb_map.c","eb/relic_eb_mul.c","eb/relic_eb_mul_fix.c","eb/relic_eb_mul_sim.c","eb/relic_eb_neg.c","eb/relic_eb_norm.c","eb/relic_eb_param.c","eb/relic_eb_pck.c","eb/relic_eb_util.c","ed/relic_ed_add.c","ed/relic_ed_curve.c","ed/relic_ed_dbl.c","ed/relic_ed_map.c","ed/relic_ed_mul.c","ed/relic_ed_mul_fix.c","ed/relic_ed_mul_sim.c","ed/relic_ed_param.c","ed/relic_ed_pck.c","ed/relic_ed_util.c","pp/relic_pp_add.c","pp/relic_pp_dbl.c","pp/relic_pp_exp.c","pp/relic_pp_map.c","pp/relic_pp_norm.c","pc/relic_pc_util.c","cp/relic_cp_rsa.c","cp/relic_cp_rabin.c","cp/relic_cp_bdpe.c","cp/relic_cp_phpe.c","cp/relic_cp_ecdh.c","cp/relic_cp_ecmqv.c","cp/relic_cp_ecies.c","cp/relic_cp_ecdsa.c","cp/relic_cp_ecss.c","cp/relic_cp_vbnn_ibs.c","cp/relic_cp_sokaka.c","cp/relic_cp_bgn.c","cp/relic_cp_ibe.c","cp/relic_cp_bls.c","cp/relic_cp_bbs.c","cp/relic_cp_zss.c","bc/relic_bc_aes.c","bc/rijndael-alg-fst.c","bc/rijndael-api-fst.c","md/blake2s-ref.c","md/relic_md_blake2s.c","md/relic_md_hmac.c","md/relic_md_kdf.c","md/relic_md_mgf.c","md/relic_md_sha1.c","md/relic_md_sha224.c","md/relic_md_sha256.c","md/relic_md_sha384.c","md/relic_md_sha512.c","md/sha1.c","md/sha224-256.c","md/sha384-512.c","low/easy/relic_bn_add_low.c","low/easy/relic_bn_cmp_low.c","low/easy/relic_bn_div_low.c","low/easy/relic_bn_mod_low.c","low/easy/relic_bn_mul_low.c","low/easy/relic_bn_shift_low.c","low/easy/relic_bn_sqr_low.c","low/easy/relic_fp_add_low.c","low/easy/relic_fp_cmp_low.c","low/easy/relic_fp_inv_low.c","low/easy/relic_fp_mul_low.c","low/easy/relic_fp_rdc_low.c","low/easy/relic_fp_shift_low.c","low/easy/relic_fp_sqr_low.c","low/easy/relic_fpx_add_low.c","low/easy/relic_fpx_mul_low.c","low/easy/relic_fpx_rdc_low.c","low/easy/relic_fpx_sqr_low.c","low/easy/relic_fb_add_low.c","low/easy/relic_fb_cmp_low.c","low/easy/relic_fb_inv_low.c","low/easy/relic_fb_itr_low.c","low/easy/relic_fb_mul_low.c","low/easy/relic_fb_rdc_low.c","low/easy/relic_fb_shift_low.c","low/easy/relic_fb_slv_low.c","low/easy/relic_fb_sqr_low.c","low/easy/relic_fb_srt_low.c","low/easy/relic_fb_trc_low.c"]}],"fullName":"librelic_s.a","linkerLanguage":"C","name":"relic_s","sourceDirectory":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls/bls-signatures/contrib/relic/src","sysroot":"/home/tops/Android/Sdk/ndk/21.1.6352462/toolchains/llvm/prebuilt/linux-x86_64/sysroot","type":"STATIC_LIBRARY"},{"artifacts":["/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a/dashj-bls/libblstmp.a"],"buildDirectory":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a/dashj-bls","fileGroups":[{"compileFlags":"-g -DANDROID -fdata-sections -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security   -O0 -fno-limit-debug-info  -fPIC   -std=gnu++11","includePath":[{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/."},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/bls-signatures/src"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a/dashj-bls/bls-signatures/contrib/relic/include"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/bls-signatures/contrib/relic/include"},{"path":"/usr/include/aarch64-linux-android"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls/bls-signatures/contrib/relic/include"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a/bls-signatures/src/contrib/relic/include"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls/bls-signatures/src/contrib/catch"}],"isGenerated":false,"language":"CXX","sources":["bls-signatures/src/extendedpublickey.cpp","bls-signatures/src/extendedprivatekey.cpp","bls-signatures/src/chaincode.cpp","bls-signatures/src/signature.cpp","bls-signatures/src/publickey.cpp","bls-signatures/src/privatekey.cpp","bls-signatures/src/bls.cpp","bls-signatures/src/aggregationinfo.cpp"]}],"fullName":"libblstmp.a","linkerLanguage":"CXX","name":"blstmp","sourceDirectory":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls","sysroot":"/home/tops/Android/Sdk/ndk/21.1.6352462/toolchains/llvm/prebuilt/linux-x86_64/sysroot","type":"STATIC_LIBRARY"},{"buildDirectory":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a/dashj-bls/bls-signatures/contrib/relic/src","fullName":"arith_objs","name":"arith_objs","sourceDirectory":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls/bls-signatures/contrib/relic/src","type":"UTILITY"},{"artifacts":["/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/build/intermediates/cmake/prodDebug/obj/arm64-v8a/libpthread.so"],"buildDirectory":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a/dashj-bls","fileGroups":[{"compileFlags":"-g -DANDROID -fdata-sections -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security -DHAVE_CONFIG_H -DWORD=32 -O0 -fno-limit-debug-info  -fPIC  ","defines":["pthread_EXPORTS"],"includePath":[{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/."},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/bls-signatures/src"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a/dashj-bls/bls-signatures/contrib/relic/include"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/bls-signatures/contrib/relic/include"},{"path":"/usr/include/aarch64-linux-android"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls/bls-signatures/contrib/relic/include"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a/bls-signatures/src/contrib/relic/include"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls/bls-signatures/src/contrib/catch"}],"isGenerated":false,"language":"C","sources":["pthread.c"]}],"fullName":"libpthread.so","linkFlags":"-Wl,--exclude-libs,libgcc.a -Wl,--exclude-libs,libgcc_real.a -Wl,--exclude-libs,libatomic.a -static-libstdc++ -Wl,--build-id -Wl,--fatal-warnings -Wl,--no-undefined -Qunused-arguments","linkLibraries":"-latomic -lm","linkerLanguage":"C","name":"pthread","sourceDirectory":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls","sysroot":"/home/tops/Android/Sdk/ndk/21.1.6352462/toolchains/llvm/prebuilt/linux-x86_64/sysroot","type":"SHARED_LIBRARY"}]},{"buildDirectory":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a","name":"Project","sourceDirectory":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp","targets":[{"artifacts":["/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a/dashj-bls/libbls.a"],"buildDirectory":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a/dashj-bls","fileGroups":[{"compileFlags":"-g -DANDROID -fdata-sections -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security   -O0 -fno-limit-debug-info  -fPIC   -std=gnu++11","includePath":[{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/."},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/bls-signatures/src"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a/dashj-bls/bls-signatures/contrib/relic/include"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/bls-signatures/contrib/relic/include"},{"path":"/usr/include/aarch64-linux-android"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls/bls-signatures/contrib/relic/include"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a/bls-signatures/src/contrib/relic/include"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls/bls-signatures/src/contrib/catch"}],"isGenerated":false,"language":"CXX","sources":["bls-signatures/src/chaincode.cpp"]}],"fullName":"libbls.a","linkerLanguage":"CXX","name":"bls","sourceDirectory":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls","sysroot":"/home/tops/Android/Sdk/ndk/21.1.6352462/toolchains/llvm/prebuilt/linux-x86_64/sysroot","type":"STATIC_LIBRARY"},{"artifacts":["/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/build/intermediates/cmake/prodDebug/obj/arm64-v8a/libdashjbls.so"],"buildDirectory":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a/dashj-bls","fileGroups":[{"compileFlags":"-g -DANDROID -fdata-sections -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security   -O0 -fno-limit-debug-info  -fPIC   -std=gnu++11","defines":["dashjbls_EXPORTS"],"includePath":[{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/."},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/bls-signatures/src"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a/dashj-bls/bls-signatures/contrib/relic/include"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/bls-signatures/contrib/relic/include"},{"path":"/usr/include/aarch64-linux-android"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls/bls-signatures/contrib/relic/include"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a/bls-signatures/src/contrib/relic/include"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls/bls-signatures/src/contrib/catch"}],"isGenerated":false,"language":"CXX","sources":["dashj-bls-signature-wrapper.cpp","stdio.cpp"]}],"fullName":"libdashjbls.so","linkFlags":"-Wl,--exclude-libs,libgcc.a -Wl,--exclude-libs,libgcc_real.a -Wl,--exclude-libs,libatomic.a -static-libstdc++ -Wl,--build-id -Wl,--fatal-warnings -Wl,--no-undefined -Qunused-arguments","linkLibraries":"libbls.a libblstmp.a bls-signatures/contrib/relic/lib/librelic_s.a /home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/build/intermediates/cmake/prodDebug/obj/arm64-v8a/libpthread.so -lm -latomic -lm","linkerLanguage":"CXX","name":"dashjbls","sourceDirectory":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls","sysroot":"/home/tops/Android/Sdk/ndk/21.1.6352462/toolchains/llvm/prebuilt/linux-x86_64/sysroot","type":"SHARED_LIBRARY"},{"artifacts":["/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a/dashj-bls/bls-signatures/contrib/relic/lib/librelic_s.a"],"buildDirectory":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a/dashj-bls/bls-signatures/contrib/relic/src","fileGroups":[{"compileFlags":"-pipe -std=c99  -Wall   -O3 -funroll-loops -fomit-frame-pointer -pthread -O0 -fno-limit-debug-info  -fPIC  ","includePath":[{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/."},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/bls-signatures/src"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a/dashj-bls/bls-signatures/contrib/relic/include"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/bls-signatures/contrib/relic/include"},{"path":"/usr/include/aarch64-linux-android"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls/bls-signatures/contrib/relic/include"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls/bls-signatures/contrib/relic/include/low"}],"isGenerated":false,"language":"C","sources":["relic_err.c","relic_core.c","relic_conf.c","relic_pool.c","relic_util.c","arch/relic_arch_none.c","rand/relic_rand_core.c","rand/relic_rand_hash.c","bn/relic_bn_add.c","bn/relic_bn_cmp.c","bn/relic_bn_div.c","bn/relic_bn_factor.c","bn/relic_bn_gcd.c","bn/relic_bn_lcm.c","bn/relic_bn_mem.c","bn/relic_bn_mod.c","bn/relic_bn_mul.c","bn/relic_bn_mxp.c","bn/relic_bn_prime.c","bn/relic_bn_rec.c","bn/relic_bn_shift.c","bn/relic_bn_smb.c","bn/relic_bn_sqr.c","bn/relic_bn_srt.c","bn/relic_bn_util.c","dv/relic_dv_mem.c","dv/relic_dv_util.c","fp/relic_fp_add.c","fp/relic_fp_cmp.c","fp/relic_fp_exp.c","fp/relic_fp_inv.c","fp/relic_fp_mul.c","fp/relic_fp_param.c","fp/relic_fp_prime.c","fp/relic_fp_rdc.c","fp/relic_fp_shift.c","fp/relic_fp_sqr.c","fp/relic_fp_srt.c","fp/relic_fp_util.c","fpx/relic_fp12_mul.c","fpx/relic_fp12_sqr.c","fpx/relic_fp18_mul.c","fpx/relic_fp18_sqr.c","fpx/relic_fp2_mul.c","fpx/relic_fp2_sqr.c","fpx/relic_fp3_mul.c","fpx/relic_fp3_sqr.c","fpx/relic_fp6_mul.c","fpx/relic_fp6_sqr.c","fpx/relic_fpx_add.c","fpx/relic_fpx_cmp.c","fpx/relic_fpx_exp.c","fpx/relic_fpx_frb.c","fpx/relic_fpx_inv.c","fpx/relic_fpx_pck.c","fpx/relic_fpx_rdc.c","fpx/relic_fpx_srt.c","fpx/relic_fpx_util.c","fb/relic_fb_add.c","fb/relic_fb_cmp.c","fb/relic_fb_exp.c","fb/relic_fb_inv.c","fb/relic_fb_itr.c","fb/relic_fb_mul.c","fb/relic_fb_param.c","fb/relic_fb_poly.c","fb/relic_fb_rdc.c","fb/relic_fb_shift.c","fb/relic_fb_slv.c","fb/relic_fb_sqr.c","fb/relic_fb_srt.c","fb/relic_fb_trc.c","fb/relic_fb_util.c","fbx/relic_fb2_inv.c","fbx/relic_fb2_mul.c","fbx/relic_fb2_slv.c","fbx/relic_fb2_sqr.c","ep/relic_ep_add.c","ep/relic_ep_curve.c","ep/relic_ep_dbl.c","ep/relic_ep_map.c","ep/relic_ep_mul.c","ep/relic_ep_mul_fix.c","ep/relic_ep_mul_sim.c","ep/relic_ep_neg.c","ep/relic_ep_norm.c","ep/relic_ep_param.c","ep/relic_ep_pck.c","ep/relic_ep_util.c","epx/relic_ep2_add.c","epx/relic_ep2_curve.c","epx/relic_ep2_dbl.c","epx/relic_ep2_frb.c","epx/relic_ep2_map.c","epx/relic_ep2_mul.c","epx/relic_ep2_mul_fix.c","epx/relic_ep2_mul_sim.c","epx/relic_ep2_neg.c","epx/relic_ep2_norm.c","epx/relic_ep2_pck.c","epx/relic_ep2_util.c","eb/relic_eb_add.c","eb/relic_eb_curve.c","eb/relic_eb_dbl.c","eb/relic_eb_frb.c","eb/relic_eb_hlv.c","eb/relic_eb_map.c","eb/relic_eb_mul.c","eb/relic_eb_mul_fix.c","eb/relic_eb_mul_sim.c","eb/relic_eb_neg.c","eb/relic_eb_norm.c","eb/relic_eb_param.c","eb/relic_eb_pck.c","eb/relic_eb_util.c","ed/relic_ed_add.c","ed/relic_ed_curve.c","ed/relic_ed_dbl.c","ed/relic_ed_map.c","ed/relic_ed_mul.c","ed/relic_ed_mul_fix.c","ed/relic_ed_mul_sim.c","ed/relic_ed_param.c","ed/relic_ed_pck.c","ed/relic_ed_util.c","pp/relic_pp_add.c","pp/relic_pp_dbl.c","pp/relic_pp_exp.c","pp/relic_pp_map.c","pp/relic_pp_norm.c","pc/relic_pc_util.c","cp/relic_cp_rsa.c","cp/relic_cp_rabin.c","cp/relic_cp_bdpe.c","cp/relic_cp_phpe.c","cp/relic_cp_ecdh.c","cp/relic_cp_ecmqv.c","cp/relic_cp_ecies.c","cp/relic_cp_ecdsa.c","cp/relic_cp_ecss.c","cp/relic_cp_vbnn_ibs.c","cp/relic_cp_sokaka.c","cp/relic_cp_bgn.c","cp/relic_cp_ibe.c","cp/relic_cp_bls.c","cp/relic_cp_bbs.c","cp/relic_cp_zss.c","bc/relic_bc_aes.c","bc/rijndael-alg-fst.c","bc/rijndael-api-fst.c","md/blake2s-ref.c","md/relic_md_blake2s.c","md/relic_md_hmac.c","md/relic_md_kdf.c","md/relic_md_mgf.c","md/relic_md_sha1.c","md/relic_md_sha224.c","md/relic_md_sha256.c","md/relic_md_sha384.c","md/relic_md_sha512.c","md/sha1.c","md/sha224-256.c","md/sha384-512.c","low/easy/relic_bn_add_low.c","low/easy/relic_bn_cmp_low.c","low/easy/relic_bn_div_low.c","low/easy/relic_bn_mod_low.c","low/easy/relic_bn_mul_low.c","low/easy/relic_bn_shift_low.c","low/easy/relic_bn_sqr_low.c","low/easy/relic_fp_add_low.c","low/easy/relic_fp_cmp_low.c","low/easy/relic_fp_inv_low.c","low/easy/relic_fp_mul_low.c","low/easy/relic_fp_rdc_low.c","low/easy/relic_fp_shift_low.c","low/easy/relic_fp_sqr_low.c","low/easy/relic_fpx_add_low.c","low/easy/relic_fpx_mul_low.c","low/easy/relic_fpx_rdc_low.c","low/easy/relic_fpx_sqr_low.c","low/easy/relic_fb_add_low.c","low/easy/relic_fb_cmp_low.c","low/easy/relic_fb_inv_low.c","low/easy/relic_fb_itr_low.c","low/easy/relic_fb_mul_low.c","low/easy/relic_fb_rdc_low.c","low/easy/relic_fb_shift_low.c","low/easy/relic_fb_slv_low.c","low/easy/relic_fb_sqr_low.c","low/easy/relic_fb_srt_low.c","low/easy/relic_fb_trc_low.c"]}],"fullName":"librelic_s.a","linkerLanguage":"C","name":"relic_s","sourceDirectory":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls/bls-signatures/contrib/relic/src","sysroot":"/home/tops/Android/Sdk/ndk/21.1.6352462/toolchains/llvm/prebuilt/linux-x86_64/sysroot","type":"STATIC_LIBRARY"},{"artifacts":["/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/build/intermediates/cmake/prodDebug/obj/arm64-v8a/libx11.so"],"buildDirectory":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a","fileGroups":[{"compileFlags":"-g -DANDROID -fdata-sections -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security   -O0 -fno-limit-debug-info  -fPIC  ","defines":["x11_EXPORTS"],"includePath":[{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/."}],"isGenerated":false,"language":"CXX","sources":["hashblock.cpp"]},{"compileFlags":"-g -DANDROID -fdata-sections -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security -DHAVE_CONFIG_H -DWORD=32 -O0 -fno-limit-debug-info  -fPIC  ","defines":["x11_EXPORTS"],"includePath":[{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/."}],"isGenerated":false,"language":"C","sources":["aes_helper.c","blake.c","bmw.c","cubehash.c","echo.c","groestl.c","keccak.c","jh.c","luffa.c","shavite.c","simd.c","skein.c"]}],"fullName":"libx11.so","linkFlags":"-Wl,--exclude-libs,libgcc.a -Wl,--exclude-libs,libgcc_real.a -Wl,--exclude-libs,libatomic.a -static-libstdc++ -Wl,--build-id -Wl,--fatal-warnings -Wl,--no-undefined -Qunused-arguments","linkLibraries":"-latomic -lm","linkerLanguage":"CXX","name":"x11","sourceDirectory":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp","sysroot":"/home/tops/Android/Sdk/ndk/21.1.6352462/toolchains/llvm/prebuilt/linux-x86_64/sysroot","type":"SHARED_LIBRARY"},{"artifacts":["/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a/dashj-bls/libblstmp.a"],"buildDirectory":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a/dashj-bls","fileGroups":[{"compileFlags":"-g -DANDROID -fdata-sections -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security   -O0 -fno-limit-debug-info  -fPIC   -std=gnu++11","includePath":[{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/."},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/bls-signatures/src"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a/dashj-bls/bls-signatures/contrib/relic/include"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/bls-signatures/contrib/relic/include"},{"path":"/usr/include/aarch64-linux-android"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls/bls-signatures/contrib/relic/include"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a/bls-signatures/src/contrib/relic/include"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls/bls-signatures/src/contrib/catch"}],"isGenerated":false,"language":"CXX","sources":["bls-signatures/src/extendedpublickey.cpp","bls-signatures/src/extendedprivatekey.cpp","bls-signatures/src/chaincode.cpp","bls-signatures/src/signature.cpp","bls-signatures/src/publickey.cpp","bls-signatures/src/privatekey.cpp","bls-signatures/src/bls.cpp","bls-signatures/src/aggregationinfo.cpp"]}],"fullName":"libblstmp.a","linkerLanguage":"CXX","name":"blstmp","sourceDirectory":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls","sysroot":"/home/tops/Android/Sdk/ndk/21.1.6352462/toolchains/llvm/prebuilt/linux-x86_64/sysroot","type":"STATIC_LIBRARY"},{"buildDirectory":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a/dashj-bls/bls-signatures/contrib/relic/src","fullName":"arith_objs","name":"arith_objs","sourceDirectory":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls/bls-signatures/contrib/relic/src","type":"UTILITY"},{"artifacts":["/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/build/intermediates/cmake/prodDebug/obj/arm64-v8a/libpthread.so"],"buildDirectory":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a/dashj-bls","fileGroups":[{"compileFlags":"-g -DANDROID -fdata-sections -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security -DHAVE_CONFIG_H -DWORD=32 -O0 -fno-limit-debug-info  -fPIC  ","defines":["pthread_EXPORTS"],"includePath":[{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/."},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/bls-signatures/src"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a/dashj-bls/bls-signatures/contrib/relic/include"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/bls-signatures/contrib/relic/include"},{"path":"/usr/include/aarch64-linux-android"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls/bls-signatures/contrib/relic/include"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a/bls-signatures/src/contrib/relic/include"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls/bls-signatures/src/contrib/catch"}],"isGenerated":false,"language":"C","sources":["pthread.c"]}],"fullName":"libpthread.so","linkFlags":"-Wl,--exclude-libs,libgcc.a -Wl,--exclude-libs,libgcc_real.a -Wl,--exclude-libs,libatomic.a -static-libstdc++ -Wl,--build-id -Wl,--fatal-warnings -Wl,--no-undefined -Qunused-arguments","linkLibraries":"-latomic -lm","linkerLanguage":"C","name":"pthread","sourceDirectory":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls","sysroot":"/home/tops/Android/Sdk/ndk/21.1.6352462/toolchains/llvm/prebuilt/linux-x86_64/sysroot","type":"SHARED_LIBRARY"},{"artifacts":["/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/build/intermediates/cmake/prodDebug/obj/arm64-v8a/libscrypt.so"],"buildDirectory":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a","fileGroups":[{"compileFlags":"-g -DANDROID -fdata-sections -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security -DHAVE_CONFIG_H -DWORD=32 -O0 -fno-limit-debug-info  -fPIC  ","defines":["scrypt_EXPORTS"],"includePath":[{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/."}],"isGenerated":false,"language":"C","sources":["scrypt_jni.c","crypto_scrypt-nosse.c","sha256.c"]}],"fullName":"libscrypt.so","linkFlags":"-Wl,--exclude-libs,libgcc.a -Wl,--exclude-libs,libgcc_real.a -Wl,--exclude-libs,libatomic.a -static-libstdc++ -Wl,--build-id -Wl,--fatal-warnings -Wl,--no-undefined -Qunused-arguments","linkLibraries":"-latomic -lm","linkerLanguage":"C","name":"scrypt","sourceDirectory":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp","sysroot":"/home/tops/Android/Sdk/ndk/21.1.6352462/toolchains/llvm/prebuilt/linux-x86_64/sysroot","type":"SHARED_LIBRARY"}]},{"buildDirectory":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a/dashj-bls/bls-signatures/contrib/relic","name":"RELIC","sourceDirectory":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls/bls-signatures/contrib/relic","targets":[{"artifacts":["/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a/dashj-bls/bls-signatures/contrib/relic/lib/librelic_s.a"],"buildDirectory":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a/dashj-bls/bls-signatures/contrib/relic/src","fileGroups":[{"compileFlags":"-pipe -std=c99  -Wall   -O3 -funroll-loops -fomit-frame-pointer -pthread -O0 -fno-limit-debug-info  -fPIC  ","includePath":[{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/."},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/bls-signatures/src"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a/dashj-bls/bls-signatures/contrib/relic/include"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/bls-signatures/contrib/relic/include"},{"path":"/usr/include/aarch64-linux-android"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls/bls-signatures/contrib/relic/include"},{"path":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls/bls-signatures/contrib/relic/include/low"}],"isGenerated":false,"language":"C","sources":["relic_err.c","relic_core.c","relic_conf.c","relic_pool.c","relic_util.c","arch/relic_arch_none.c","rand/relic_rand_core.c","rand/relic_rand_hash.c","bn/relic_bn_add.c","bn/relic_bn_cmp.c","bn/relic_bn_div.c","bn/relic_bn_factor.c","bn/relic_bn_gcd.c","bn/relic_bn_lcm.c","bn/relic_bn_mem.c","bn/relic_bn_mod.c","bn/relic_bn_mul.c","bn/relic_bn_mxp.c","bn/relic_bn_prime.c","bn/relic_bn_rec.c","bn/relic_bn_shift.c","bn/relic_bn_smb.c","bn/relic_bn_sqr.c","bn/relic_bn_srt.c","bn/relic_bn_util.c","dv/relic_dv_mem.c","dv/relic_dv_util.c","fp/relic_fp_add.c","fp/relic_fp_cmp.c","fp/relic_fp_exp.c","fp/relic_fp_inv.c","fp/relic_fp_mul.c","fp/relic_fp_param.c","fp/relic_fp_prime.c","fp/relic_fp_rdc.c","fp/relic_fp_shift.c","fp/relic_fp_sqr.c","fp/relic_fp_srt.c","fp/relic_fp_util.c","fpx/relic_fp12_mul.c","fpx/relic_fp12_sqr.c","fpx/relic_fp18_mul.c","fpx/relic_fp18_sqr.c","fpx/relic_fp2_mul.c","fpx/relic_fp2_sqr.c","fpx/relic_fp3_mul.c","fpx/relic_fp3_sqr.c","fpx/relic_fp6_mul.c","fpx/relic_fp6_sqr.c","fpx/relic_fpx_add.c","fpx/relic_fpx_cmp.c","fpx/relic_fpx_exp.c","fpx/relic_fpx_frb.c","fpx/relic_fpx_inv.c","fpx/relic_fpx_pck.c","fpx/relic_fpx_rdc.c","fpx/relic_fpx_srt.c","fpx/relic_fpx_util.c","fb/relic_fb_add.c","fb/relic_fb_cmp.c","fb/relic_fb_exp.c","fb/relic_fb_inv.c","fb/relic_fb_itr.c","fb/relic_fb_mul.c","fb/relic_fb_param.c","fb/relic_fb_poly.c","fb/relic_fb_rdc.c","fb/relic_fb_shift.c","fb/relic_fb_slv.c","fb/relic_fb_sqr.c","fb/relic_fb_srt.c","fb/relic_fb_trc.c","fb/relic_fb_util.c","fbx/relic_fb2_inv.c","fbx/relic_fb2_mul.c","fbx/relic_fb2_slv.c","fbx/relic_fb2_sqr.c","ep/relic_ep_add.c","ep/relic_ep_curve.c","ep/relic_ep_dbl.c","ep/relic_ep_map.c","ep/relic_ep_mul.c","ep/relic_ep_mul_fix.c","ep/relic_ep_mul_sim.c","ep/relic_ep_neg.c","ep/relic_ep_norm.c","ep/relic_ep_param.c","ep/relic_ep_pck.c","ep/relic_ep_util.c","epx/relic_ep2_add.c","epx/relic_ep2_curve.c","epx/relic_ep2_dbl.c","epx/relic_ep2_frb.c","epx/relic_ep2_map.c","epx/relic_ep2_mul.c","epx/relic_ep2_mul_fix.c","epx/relic_ep2_mul_sim.c","epx/relic_ep2_neg.c","epx/relic_ep2_norm.c","epx/relic_ep2_pck.c","epx/relic_ep2_util.c","eb/relic_eb_add.c","eb/relic_eb_curve.c","eb/relic_eb_dbl.c","eb/relic_eb_frb.c","eb/relic_eb_hlv.c","eb/relic_eb_map.c","eb/relic_eb_mul.c","eb/relic_eb_mul_fix.c","eb/relic_eb_mul_sim.c","eb/relic_eb_neg.c","eb/relic_eb_norm.c","eb/relic_eb_param.c","eb/relic_eb_pck.c","eb/relic_eb_util.c","ed/relic_ed_add.c","ed/relic_ed_curve.c","ed/relic_ed_dbl.c","ed/relic_ed_map.c","ed/relic_ed_mul.c","ed/relic_ed_mul_fix.c","ed/relic_ed_mul_sim.c","ed/relic_ed_param.c","ed/relic_ed_pck.c","ed/relic_ed_util.c","pp/relic_pp_add.c","pp/relic_pp_dbl.c","pp/relic_pp_exp.c","pp/relic_pp_map.c","pp/relic_pp_norm.c","pc/relic_pc_util.c","cp/relic_cp_rsa.c","cp/relic_cp_rabin.c","cp/relic_cp_bdpe.c","cp/relic_cp_phpe.c","cp/relic_cp_ecdh.c","cp/relic_cp_ecmqv.c","cp/relic_cp_ecies.c","cp/relic_cp_ecdsa.c","cp/relic_cp_ecss.c","cp/relic_cp_vbnn_ibs.c","cp/relic_cp_sokaka.c","cp/relic_cp_bgn.c","cp/relic_cp_ibe.c","cp/relic_cp_bls.c","cp/relic_cp_bbs.c","cp/relic_cp_zss.c","bc/relic_bc_aes.c","bc/rijndael-alg-fst.c","bc/rijndael-api-fst.c","md/blake2s-ref.c","md/relic_md_blake2s.c","md/relic_md_hmac.c","md/relic_md_kdf.c","md/relic_md_mgf.c","md/relic_md_sha1.c","md/relic_md_sha224.c","md/relic_md_sha256.c","md/relic_md_sha384.c","md/relic_md_sha512.c","md/sha1.c","md/sha224-256.c","md/sha384-512.c","low/easy/relic_bn_add_low.c","low/easy/relic_bn_cmp_low.c","low/easy/relic_bn_div_low.c","low/easy/relic_bn_mod_low.c","low/easy/relic_bn_mul_low.c","low/easy/relic_bn_shift_low.c","low/easy/relic_bn_sqr_low.c","low/easy/relic_fp_add_low.c","low/easy/relic_fp_cmp_low.c","low/easy/relic_fp_inv_low.c","low/easy/relic_fp_mul_low.c","low/easy/relic_fp_rdc_low.c","low/easy/relic_fp_shift_low.c","low/easy/relic_fp_sqr_low.c","low/easy/relic_fpx_add_low.c","low/easy/relic_fpx_mul_low.c","low/easy/relic_fpx_rdc_low.c","low/easy/relic_fpx_sqr_low.c","low/easy/relic_fb_add_low.c","low/easy/relic_fb_cmp_low.c","low/easy/relic_fb_inv_low.c","low/easy/relic_fb_itr_low.c","low/easy/relic_fb_mul_low.c","low/easy/relic_fb_rdc_low.c","low/easy/relic_fb_shift_low.c","low/easy/relic_fb_slv_low.c","low/easy/relic_fb_sqr_low.c","low/easy/relic_fb_srt_low.c","low/easy/relic_fb_trc_low.c"]}],"fullName":"librelic_s.a","linkerLanguage":"C","name":"relic_s","sourceDirectory":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls/bls-signatures/contrib/relic/src","sysroot":"/home/tops/Android/Sdk/ndk/21.1.6352462/toolchains/llvm/prebuilt/linux-x86_64/sysroot","type":"STATIC_LIBRARY"},{"buildDirectory":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/.cxx/cmake/prodDebug/arm64-v8a/dashj-bls/bls-signatures/contrib/relic/src","fullName":"arith_objs","name":"arith_objs","sourceDirectory":"/home/tops/AndroidStudioProjects/ChiragProject/Dash/Code/New/28/dashwallet_android/wallet/cpp/dashj-bls/bls-signatures/contrib/relic/src","type":"UTILITY"}]}]}],"cookie":"","inReplyTo":"codemodel","type":"reply"}

CMAKE SERVER: ]== "CMake Server" ==]

